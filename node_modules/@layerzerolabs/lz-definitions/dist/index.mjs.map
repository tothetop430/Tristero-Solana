{"version":3,"sources":["../src/enums/chain-aptos.ts","../src/enums/chain-evm.ts","../src/enums/chain-solana.ts","../src/enums/chain.ts","../src/enums/chain-type.ts","../src/enums/endpoint-id.ts","../src/enums/environment.ts","../src/enums/stage.ts","../src/enums/endpoint-version.ts","../src/enums/message-lib.ts","../src/enums/chain-key.ts","../src/constants/chainKey.ts","../src/constants/environment.ts","../src/constants/ulnv1.ts","../src/utils/utils.ts"],"names":["AptosChain","EvmChain","SolanaChain","ChainType","MainnetEndpointId","TestnetEndpointId","SandboxEndpointId","MainnetV2EndpointId","TestnetV2EndpointId","SandboxV2EndpointId","Environment","Stage","EndpointVersion","MessageLibVersionV2","MessageLibVersionV1","ChainKey","chain","stage"],"mappings":"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","sourcesContent":["export enum AptosChain {\n    APTOS = 'aptos',\n}\n","export enum EvmChain {\n    ETHEREUM = 'ethereum',\n    BSC = 'bsc',\n    AVALANCHE = 'avalanche',\n    POLYGON = 'polygon',\n    ZKPOLYGON = 'zkpolygon',\n    ARBITRUM = 'arbitrum',\n    OPTIMISM = 'optimism',\n    FANTOM = 'fantom',\n    SWIMMER = 'swimmer',\n    DFK = 'dfk',\n    HARMONY = 'harmony',\n    ARCANA = 'arcana',\n    DEXALOT = 'dexalot',\n    CASTLECRUSH = 'castlecrush',\n    GNOSIS = 'gnosis',\n    CELO = 'celo',\n    MOONBEAM = 'moonbeam',\n    BOBA = 'boba',\n    PORTAL = 'portal',\n    INTAIN = 'intain',\n    FUSE = 'fuse',\n    ASTAR = 'astar',\n    ZKSYNC = 'zksync',\n    SHRAPNEL = 'shrapnel',\n    DOS = 'dos',\n    KLAYTN = 'klaytn',\n    METIS = 'metis',\n    COREDAO = 'coredao',\n    OKX = 'okx',\n    METER = 'meter',\n    GOERLI = 'goerli',\n    BASE = 'base',\n    ZKCONSENSYS = 'zkconsensys',\n    SEPOLIA = 'sepolia',\n    MOONRIVER = 'moonriver',\n    AAVEGOTCHI = 'aavegotchi',\n    SCROLL = 'scroll',\n    CATHAY = 'cathay',\n    KAVA = 'kava',\n    TENET = 'tenet',\n    CANTO = 'canto',\n    ORDERLY = 'orderly',\n    NOVA = 'nova',\n    BLOCKGEN = 'blockgen',\n    MERITCIRCLE = 'meritcircle',\n    MANTLE = 'mantle',\n    HUBBLE = 'hubble',\n    ZORA = 'zora',\n    TOMO = 'tomo',\n    LOOT = 'loot',\n    TELOS = 'telos',\n    AURORA = 'aurora',\n    OPBNB = 'opbnb',\n    SHIMMER = 'shimmer',\n    MONAD = 'monad',\n    LIF3 = 'lif3',\n    SPRUCE = 'spruce',\n    PGJJTK = 'pgjjtk',\n    ODA = 'oda',\n    KIWI = 'kiwi',\n    CONFLUX = 'conflux',\n    EON = 'eon',\n    XPLA = 'xpla',\n    HOLESKY = 'holesky',\n    INJECTIVE = 'injective',\n    IDEX = 'idex',\n    ZKATANA = 'zkatana',\n    MANTA = 'manta',\n    FRAME = 'frame',\n    PGN = 'pgn',\n    POLYGONCDK = 'polygoncdk',\n    ARBSEP = 'arbsep',\n    OPTSEP = 'optsep',\n    BERA = 'bera',\n    VENN = 'venn',\n    RARIBLE = 'rarible',\n    GUNZILLA = 'gunzilla',\n\n    RC1 = 'rc1',\n    ETHERLINK = 'etherlink',\n    KIWI2 = 'kiwi2',\n    BB1 = 'bb1',\n    JOC = 'joc',\n    BLAST = 'blast',\n    TRON = 'tron',\n\n    TRONDEV = 'trondev',\n    XAI = 'xai',\n    TANGIBLE = 'tangible',\n    BASESEP = 'basesep',\n    MANTLESEP = 'mantlesep',\n    ZKPOLYGONSEP = 'zkpolygonsep',\n    ZKSYNCSEP = 'zksyncsep',\n    ZORASEP = 'zorasep',\n    EXOCORE = 'exocore',\n    REAL = 'real',\n    TILTYARD = 'tiltyard',\n    SKALE = 'skale',\n    FRAXTAL = 'fraxtal',\n    SEI = 'sei',\n    MODE = 'mode',\n    HEDERA = 'hedera',\n    UNREAL = 'unreal',\n    MASA = 'masa',\n    MERLIN = 'merlin',\n    HOMEVERSE = 'homeverse',\n    ZKASTAR = 'zkastar',\n    AMOY = 'amoy',\n    DEGEN = 'degen',\n    XLAYER = 'xlayer',\n    FORM = 'form',\n    LL1 = 'll1',\n    MANTASEP = 'mantasep',\n    TAIKO = 'taiko',\n    ZIRCUIT = 'zircuit',\n    CAMP = 'camp',\n    OLIVE = 'olive',\n    SANKO = 'sanko',\n    BOB = 'bob',\n    CYBER = 'cyber',\n\n    BOTANIX = 'botanix',\n    XCHAIN = 'xchain',\n    ZKLINK = 'zklink',\n    EBI = 'ebi',\n\n    KINTO = 'kinto',\n    LINEASEP = 'lineasep',\n\n    IOTA = 'iota',\n\n    BESU1 = 'besu1',\n    BOUNCEBIT = 'bouncebit',\n    MORPH = 'morph'\n}\n","export enum SolanaChain {\n    SOLANA = 'solana',\n}\n","import { AptosChain } from './chain-aptos'\nimport { EvmChain } from './chain-evm'\nimport { SolanaChain } from './chain-solana'\n\nexport * from './chain-evm'\nexport * from './chain-solana'\nexport * from './chain-aptos'\n\nexport type Chain = EvmChain | AptosChain | SolanaChain\nexport const Chain = {\n    ...EvmChain,\n    ...AptosChain,\n    ...SolanaChain,\n}\n","export enum ChainType {\n    UNKNOWN = 'unknown',\n    EVM = 'evm',\n    APTOS = 'aptos',\n    SOLANA = 'solana',\n}\n","export const EndpointV2IdBase = 30000\n\nexport enum MainnetEndpointId {\n    ETHEREUM_MAINNET = 101,\n    BSC_MAINNET = 102,\n    AVALANCHE_MAINNET = 106,\n    POLYGON_MAINNET = 109,\n    ARBITRUM_MAINNET = 110,\n    OPTIMISM_MAINNET = 111,\n    FANTOM_MAINNET = 112,\n    SWIMMER_MAINNET = 114,\n    DFK_MAINNET = 115,\n    HARMONY_MAINNET = 116,\n    DEXALOT_MAINNET = 118,\n    CELO_MAINNET = 125,\n    MOONBEAM_MAINNET = 126,\n    INTAIN_MAINNET = 152,\n    FUSE_MAINNET = 138,\n    GNOSIS_MAINNET = 145,\n    APTOS_MAINNET = 108,\n    KLAYTN_MAINNET = 150,\n    METIS_MAINNET = 151,\n    COREDAO_MAINNET = 153,\n    GOERLI_MAINNET = 154,\n    OKX_MAINNET = 155,\n    CANTO_MAINNET = 159,\n    ZKSYNC_MAINNET = 165,\n    SHRAPNEL_MAINNET = 148,\n    DOS_MAINNET = 149,\n    ZKPOLYGON_MAINNET = 158,\n    SEPOLIA_MAINNET = 161,\n    MOONRIVER_MAINNET = 167,\n    SOLANA_MAINNET = 168,\n    TENET_MAINNET = 173,\n    NOVA_MAINNET = 175,\n    METER_MAINNET = 176,\n    KAVA_MAINNET = 177,\n    MANTLE_MAINNET = 181,\n    HUBBLE_MAINNET = 182,\n    ZKCONSENSYS_MAINNET = 183,\n    BASE_MAINNET = 184,\n\n    ZORA_MAINNET = 195,\n    TOMO_MAINNET = 196,\n    LOOT_MAINNET = 197,\n    MERITCIRCLE_MAINNET = 198,\n    TELOS_MAINNET = 199,\n\n    OPBNB_MAINNET = 202,\n    LIF3_MAINNET = 205,\n    ASTAR_MAINNET = 210,\n    AURORA_MAINNET = 211,\n\n    CONFLUX_MAINNET = 212,\n    ORDERLY_MAINNET = 213,\n    SCROLL_MAINNET = 214,\n\n    EON_MAINNET = 215,\n    XPLA_MAINNET = 216,\n\n    MANTA_MAINNET = 217,\n    PGN_MAINNET = 218,\n    SHIMMER_MAINNET = 230,\n\n    BB1_MAINNET = 234,\n    RARIBLE_MAINNET = 235,\n\n    XAI_MAINNET = 236,\n\n    REAL_MAINNET = 237,\n    TILTYARD_MAINNET = 238,\n    FRAXTAL_MAINNET = 255,\n\n    TRON_MAINNET = 420,\n    ZKATANA_MAINNET = 257,\n\n    BLAST_MAINNET = 243,\n    MODE_MAINNET = 260,\n\n    MASA_MAINNET = 263,\n    HOMEVERSE_MAINNET = 265,\n\n    MERLIN_MAINNET = 266,\n    DEGEN_MAINNET = 267,\n\n    SKALE_MAINNET = 273,\n    XLAYER_MAINNET = 274,\n\n    SANKO_MAINNET = 278,\n    BOB_MAINNET = 279,\n\n    SEI_MAINNET = 280,\n\n    EBI_MAINNET = 282,\n\n    CYBER_MAINNET = 283,\n    IOTA_MAINNET = 284,\n\n    KINTO_MAINNET = 281,\n    JOC_MAINNET = 285,\n    TAIKO_MAINNET = 290,\n    XCHAIN_MAINNET = 291,\n\n    ETHERLINK_MAINNET = 292,\n}\n\nexport enum TestnetEndpointId {\n    BSC_TESTNET = 10102,\n    AVALANCHE_TESTNET = 10106,\n    POLYGON_TESTNET = 10109,\n    FANTOM_TESTNET = 10112,\n    SWIMMER_TESTNET = 10130,\n    DFK_TESTNET = 10115,\n    HARMONY_TESTNET = 10133,\n    DEXALOT_TESTNET = 10118,\n    CELO_TESTNET = 10125,\n    MOONBEAM_TESTNET = 10126,\n    INTAIN_TESTNET = 10152,\n    ETHEREUM_TESTNET = 10121,\n    ARBITRUM_TESTNET = 10143,\n    OPTIMISM_TESTNET = 10132,\n    FUSE_TESTNET = 10138,\n    GNOSIS_TESTNET = 10145,\n    ZKSYNC_TESTNET = 10165,\n    SHRAPNEL_TESTNET = 10164,\n    DOS_TESTNET = 10162,\n    APTOS_TESTNET = 10108,\n    KLAYTN_TESTNET = 10150,\n    METIS_TESTNET = 10151,\n    COREDAO_TESTNET = 10153,\n    OKX_TESTNET = 10155,\n    METER_TESTNET = 10156,\n    ZKCONSENSYS_TESTNET = 10157, // later named: Linea\n    ZKPOLYGON_TESTNET = 10158,\n    CANTO_TESTNET = 10159,\n    BASE_TESTNET = 10160,\n    SEPOLIA_TESTNET = 10161,\n    // MOONRIVER_TESTNET = 10166,\n    SOLANA_TESTNET = 10168,\n    // AAVEGOTCHI_TESTNET = 10169,\n\n    CATHAY_TESTNET = 10171,\n    KAVA_TESTNET = 10172,\n    TENET_TESTNET = 10173,\n    //ORDERLY_TESTNET = 10174,\n    BLOCKGEN_TESTNET = 10177,\n    MERITCIRCLE_TESTNET = 10178,\n    // AAVEGOTCHI_TESTNET = 10180,\n    MANTLE_TESTNET = 10181,\n    HUBBLE_TESTNET = 10182,\n\n    AAVEGOTCHI_TESTNET = 10191,\n\n    ZORA_TESTNET = 10195,\n    TOMO_TESTNET = 10196,\n    LOOT_TESTNET = 10197,\n    TELOS_TESTNET = 10199,\n    ORDERLY_TESTNET = 10200,\n\n    AURORA_TESTNET = 10201,\n    OPBNB_TESTNET = 10202,\n    //SHIMMER_TESTNET = 10203, // burned\n    MONAD_TESTNET = 10204,\n    LIF3_TESTNET = 10205,\n\n    SPRUCE_TESTNET = 10206,\n    PGJJTK_TESTNET = 10207,\n    ODA_TESTNET = 10208,\n    KIWI_TESTNET = 10209,\n    ASTAR_TESTNET = 10210,\n    CONFLUX_TESTNET = 10211,\n\n    // SCROLL_TESTNET = 10170, // alpha testnet was deprecated mid 2023\n    SCROLL_TESTNET = 10214,\n\n    EON_TESTNET = 10215,\n    XPLA_TESTNET = 10216,\n\n    HOLESKY_TESTNET = 10217,\n    INJECTIVE_TESTNET = 10218,\n    IDEX_TESTNET = 10219,\n\n    ZKATANA_TESTNET = 10220,\n    MANTA_TESTNET = 10221,\n\n    FRAME_TESTNET = 10222,\n    PGN_TESTNET = 10223,\n\n    POLYGONCDK_TESTNET = 10224,\n    SHIMMER_TESTNET = 10230,\n\n    ARBSEP_TESTNET = 10231,\n    OPTSEP_TESTNET = 10232,\n\n    VENN_TESTNET = 10234,\n\n    RARIBLE_TESTNET = 10235,\n    GUNZILLA_TESTNET = 10236,\n    // XCHAIN_TESTNET = 10237,    // burned\n\n    RC1_TESTNET = 10238,\n    ETHERLINK_TESTNET = 10239,\n    KIWI2_TESTNET = 10241,\n\n    JOC_TESTNET = 10242,\n    BLAST_TESTNET = 10243,\n\n    BASESEP_TESTNET = 10245,\n    MANTLESEP_TESTNET = 10246,\n    ZKPOLYGONSEP_TESTNET = 10247,\n    ZKSYNCSEP_TESTNET = 10248,\n    ZORASEP_TESTNET = 10249,\n\n    XAI_TESTNET = 10251,\n    TANGIBLE_TESTNET = 10252,\n\n    TRON_TESTNET = 10420,\n\n    FRAXTAL_TESTNET = 10255,\n\n    BERA_TESTNET = 10256, // 10233 burned\n    SEI_TESTNET = 10258,\n\n    EXOCORE_TESTNET = 10259, // 10253 burned\n\n    MODE_TESTNET = 10260,\n\n    UNREAL_TESTNET = 10262,\n    MASA_TESTNET = 10263,\n    MERLIN_TESTNET = 10264,\n\n    HOMEVERSE_TESTNET = 10265,\n    ZKASTAR_TESTNET = 10266,\n    AMOY_TESTNET = 10267,\n    DEGEN_TESTNET = 10268,\n\n    XLAYER_TESTNET = 10269,\n    FORM_TESTNET = 10270,\n    LL1_TESTNET = 10271,\n    MANTASEP_TESTNET = 10272,\n    SKALE_TESTNET = 10273, // 10254 burned\n    TAIKO_TESTNET = 10274,\n    ZIRCUIT_TESTNET = 10275,\n    CAMP_TESTNET = 10276,\n    OLIVE_TESTNET = 10277,\n    SANKO_TESTNET = 10278,\n    BOB_TESTNET = 10279,\n    CYBER_TESTNET = 10280,\n\n    BOTANIX_TESTNET = 10281,\n    XCHAIN_TESTNET = 10282,\n    ZKLINK_TESTNET = 10283,\n    EBI_TESTNET = 10284,\n\n    //HEDERA_TESTNET = 10261, // burned\n    HEDERA_TESTNET = 10285,\n    LINEASEP_TESTNET = 10286,\n\n    BESU1_TESTNET = 10288,\n    BOUNCEBIT_TESTNET = 10289,\n    MORPH_TESTNET = 10290,\n}\n\nexport enum SandboxEndpointId {\n    BSC_SANDBOX = 20102,\n    AVALANCHE_SANDBOX = 20106,\n    POLYGON_SANDBOX = 20109,\n    ETHEREUM_SANDBOX = 20121,\n    APTOS_SANDBOX = 20008,\n    OPTIMISM_SANDBOX = 20132,\n    TRON_SANDBOX = 20420,\n    TRONDEV_SANDBOX = 20421,\n    ARBITRUM_SANDBOX = 20231,\n    FANTOM_SANDBOX = 20112,\n    METIS_SANDBOX = 20151,\n}\n\nexport enum MainnetV2EndpointId {\n    ETHEREUM_V2_MAINNET = 30101,\n\n    BSC_V2_MAINNET = 30102,\n    AVALANCHE_V2_MAINNET = 30106,\n    POLYGON_V2_MAINNET = 30109,\n    ARBITRUM_V2_MAINNET = 30110,\n    OPTIMISM_V2_MAINNET = 30111,\n    FANTOM_V2_MAINNET = 30112,\n    SWIMMER_V2_MAINNET = 30114,\n    DFK_V2_MAINNET = 30115,\n    HARMONY_V2_MAINNET = 30116,\n    DEXALOT_V2_MAINNET = 30118,\n    CELO_V2_MAINNET = 30125,\n    MOONBEAM_V2_MAINNET = 30126,\n    INTAIN_V2_MAINNET = 30152,\n    FUSE_V2_MAINNET = 30138,\n    GNOSIS_V2_MAINNET = 30145,\n    KLAYTN_V2_MAINNET = 30150,\n    METIS_V2_MAINNET = 30151,\n    COREDAO_V2_MAINNET = 30153,\n    GOERLI_V2_MAINNET = 30154,\n    OKX_V2_MAINNET = 30155,\n    CANTO_V2_MAINNET = 30159,\n    ZKSYNC_V2_MAINNET = 30165,\n    SHRAPNEL_V2_MAINNET = 30148,\n    DOS_V2_MAINNET = 30149,\n    ZKPOLYGON_V2_MAINNET = 30158,\n    SEPOLIA_V2_MAINNET = 30161,\n    MOONRIVER_V2_MAINNET = 30167,\n    TENET_V2_MAINNET = 30173,\n    NOVA_V2_MAINNET = 30175,\n    METER_V2_MAINNET = 30176,\n    KAVA_V2_MAINNET = 30177,\n    MANTLE_V2_MAINNET = 30181,\n    HUBBLE_V2_MAINNET = 30182,\n    ZKCONSENSYS_V2_MAINNET = 30183, // Linea\n    BASE_V2_MAINNET = 30184,\n\n    ZORA_V2_MAINNET = 30195,\n\n    TOMO_V2_MAINNET = 30196,\n    LOOT_V2_MAINNET = 30197,\n    MERITCIRCLE_V2_MAINNET = 30198,\n    TELOS_V2_MAINNET = 30199,\n\n    OPBNB_V2_MAINNET = 30202,\n    LIF3_V2_MAINNET = 30205,\n    ASTAR_V2_MAINNET = 30210,\n    AURORA_V2_MAINNET = 30211,\n\n    CONFLUX_V2_MAINNET = 30212,\n    ORDERLY_V2_MAINNET = 30213,\n    SCROLL_V2_MAINNET = 30214,\n\n    EON_V2_MAINNET = 30215,\n    XPLA_V2_MAINNET = 30216,\n\n    MANTA_V2_MAINNET = 30217,\n    PGN_V2_MAINNET = 30218,\n\n    SHIMMER_V2_MAINNET = 30230,\n\n    BB1_V2_MAINNET = 30234,\n    RARIBLE_V2_MAINNET = 30235,\n\n    XAI_V2_MAINNET = 30236,\n\n    REAL_V2_MAINNET = 30237,\n    TILTYARD_V2_MAINNET = 30238,\n    FRAXTAL_V2_MAINNET = 30255,\n\n    TRON_V2_MAINNET = 30420,\n    ZKATANA_V2_MAINNET = 30257,\n\n    BLAST_V2_MAINNET = 30243,\n    MODE_V2_MAINNET = 30260,\n\n    MASA_V2_MAINNET = 30263,\n    HOMEVERSE_V2_MAINNET = 30265,\n\n    MERLIN_V2_MAINNET = 30266,\n    DEGEN_V2_MAINNET = 30267,\n\n    SKALE_V2_MAINNET = 30273,\n    XLAYER_V2_MAINNET = 30274,\n\n    SANKO_V2_MAINNET = 30278,\n    BOB_V2_MAINNET = 30279,\n\n    SEI_V2_MAINNET = 30280,\n    EBI_V2_MAINNET = 30282,\n\n    CYBER_V2_MAINNET = 30283,\n    IOTA_V2_MAINNET = 30284,\n\n    SOLANA_V2_MAINNET = 30168,\n\n    KINTO_V2_MAINNET = 30281,\n    JOC_V2_MAINNET = 30285,\n    TAIKO_V2_MAINNET = 30290,\n    XCHAIN_V2_MAINNET = 30291,\n\n    ETHERLINK_V2_MAINNET = 30292,\n}\n\nexport enum TestnetV2EndpointId {\n    AVALANCHE_V2_TESTNET = 40106,\n    POLYGON_V2_TESTNET = 40109,\n    ETHEREUM_V2_TESTNET = 40121,\n    OPTIMISM_V2_TESTNET = 40132,\n    ARBITRUM_V2_TESTNET = 40143,\n\n    BSC_V2_TESTNET = 40102,\n    FANTOM_V2_TESTNET = 40112,\n    DFK_V2_TESTNET = 40115,\n    HARMONY_V2_TESTNET = 40133,\n    DEXALOT_V2_TESTNET = 40118,\n    CELO_V2_TESTNET = 40125,\n    MOONBEAM_V2_TESTNET = 40126,\n    FUSE_V2_TESTNET = 40138,\n    GNOSIS_V2_TESTNET = 40145,\n    ZKSYNC_V2_TESTNET = 40165,\n    SHRAPNEL_V2_TESTNET = 40164,\n    // DOS_V2_TESTNET = 40162, // burned\n    KLAYTN_V2_TESTNET = 40150,\n    METIS_V2_TESTNET = 40151,\n    COREDAO_V2_TESTNET = 40153,\n    OKX_V2_TESTNET = 40155,\n    METER_V2_TESTNET = 40156,\n    ZKCONSENSYS_V2_TESTNET = 40157,\n    ZKPOLYGON_V2_TESTNET = 40158,\n    CANTO_V2_TESTNET = 40159,\n    BASE_V2_TESTNET = 40160,\n    SEPOLIA_V2_TESTNET = 40161,\n    AAVEGOTCHI_V2_TESTNET = 40179,\n    SCROLL_V2_TESTNET = 40170,\n    CATHAY_V2_TESTNET = 40171,\n    KAVA_V2_TESTNET = 40172,\n    TENET_V2_TESTNET = 40173,\n    // ORDERLY_V2_TESTNET = 40174,\n    BLOCKGEN_V2_TESTNET = 40177,\n    MERITCIRCLE_V2_TESTNET = 40178,\n    MANTLE_V2_TESTNET = 40181,\n    HUBBLE_V2_TESTNET = 40182,\n\n    ZORA_V2_TESTNET = 40195,\n\n    TOMO_V2_TESTNET = 40196,\n    LOOT_V2_TESTNET = 40197,\n    TELOS_V2_TESTNET = 40199,\n    ORDERLY_V2_TESTNET = 40200,\n\n    AURORA_V2_TESTNET = 40201,\n    OPBNB_V2_TESTNET = 40202,\n    SHIMMER_V2_TESTNET = 40203,\n    MONAD_V2_TESTNET = 40204,\n    LIF3_V2_TESTNET = 40205,\n\n    SPRUCE_V2_TESTNET = 40206,\n    PGJJTK_V2_TESTNET = 40207,\n    ODA_V2_TESTNET = 40208,\n\n    KIWI_V2_TESTNET = 40209,\n    ASTAR_V2_TESTNET = 40210,\n    CONFLUX_V2_TESTNET = 40211,\n\n    EON_V2_TESTNET = 40215,\n    XPLA_V2_TESTNET = 40216,\n\n    HOLESKY_V2_TESTNET = 40217,\n    INJECTIVE_V2_TESTNET = 40218,\n    IDEX_V2_TESTNET = 40219,\n\n    ZKATANA_V2_TESTNET = 40220,\n    MANTA_V2_TESTNET = 40221,\n\n    FRAME_V2_TESTNET = 40222,\n    PGN_V2_TESTNET = 40223,\n    POLYGONCDK_V2_TESTNET = 40224,\n\n    ARBSEP_V2_TESTNET = 40231,\n    OPTSEP_V2_TESTNET = 40232,\n\n    VENN_V2_TESTNET = 40234,\n\n    RARIBLE_V2_TESTNET = 40235,\n    GUNZILLA_V2_TESTNET = 40236,\n    // XCHAIN_V2_TESTNET = 40237,     // burned\n\n    RC1_V2_TESTNET = 40238,\n    ETHERLINK_V2_TESTNET = 40239,\n    KIWI2_V2_TESTNET = 40241,\n\n    JOC_V2_TESTNET = 40242,\n    BLAST_V2_TESTNET = 40243,\n\n    BASESEP_V2_TESTNET = 40245,\n    MANTLESEP_V2_TESTNET = 40246,\n    ZKPOLYGONSEP_V2_TESTNET = 40247,\n    ZKSYNCSEP_V2_TESTNET = 40248,\n    ZORASEP_V2_TESTNET = 40249,\n\n    XAI_V2_TESTNET = 40251,\n    TANGIBLE_V2_TESTNET = 40252,\n\n    EXOCORE_V2_TESTNET = 40259, // burned 40253,\n\n    TRON_V2_TESTNET = 40420,\n\n    FRAXTAL_V2_TESTNET = 40255,\n\n    BERA_V2_TESTNET = 40256, // 40233 burned\n    SEI_V2_TESTNET = 40258,\n    MODE_V2_TESTNET = 40260,\n\n    UNREAL_V2_TESTNET = 40262,\n    MASA_V2_TESTNET = 40263,\n    MERLIN_V2_TESTNET = 40264,\n\n    HOMEVERSE_V2_TESTNET = 40265,\n    ZKASTAR_V2_TESTNET = 40266,\n    AMOY_V2_TESTNET = 40267,\n    DEGEN_V2_TESTNET = 40268,\n\n    XLAYER_V2_TESTNET = 40269,\n    FORM_V2_TESTNET = 40270,\n    LL1_V2_TESTNET = 40271,\n    MANTASEP_V2_TESTNET = 40272,\n\n    SKALE_V2_TESTNET = 40273,\n    TAIKO_V2_TESTNET = 40274,\n    ZIRCUIT_V2_TESTNET = 40275,\n    CAMP_V2_TESTNET = 40276,\n    OLIVE_V2_TESTNET = 40277,\n    SANKO_V2_TESTNET = 40278,\n    BOB_V2_TESTNET = 40279,\n    CYBER_V2_TESTNET = 40280,\n\n    BOTANIX_V2_TESTNET = 40281,\n    XCHAIN_V2_TESTNET = 40282,\n    ZKLINK_V2_TESTNET = 40283,\n    EBI_V2_TESTNET = 40284,\n\n    // HEDERA_V2_TESTNET = 40261, // burned\n    HEDERA_V2_TESTNET = 40285,\n    DOS_V2_TESTNET = 40286,\n    LINEASEP_V2_TESTNET = 40287,\n\n    BESU1_V2_TESTNET = 40288,\n    BOUNCEBIT_V2_TESTNET = 40289,\n    MORPH_V2_TESTNET = 40290,\n    SOLANA_V2_TESTNET = 40168,\n}\n\nexport enum SandboxV2EndpointId {\n    ETHEREUM_V2_SANDBOX = 50121,\n    POLYGON_V2_SANDBOX = 50109,\n    SOLANA_V2_SANDBOX = 50168,\n    BSC_V2_SANDBOX = 50102,\n    AVALANCHE_V2_SANDBOX = 50106,\n    OPTIMISM_V2_SANDBOX = 50132,\n    METIS_V2_SANDBOX = 50151,\n}\n\nexport const EndpointId = {\n    ...MainnetEndpointId,\n    ...TestnetEndpointId,\n    ...SandboxEndpointId,\n    ...MainnetV2EndpointId,\n    ...TestnetV2EndpointId,\n    ...SandboxV2EndpointId,\n}\nexport type EndpointId =\n    | MainnetEndpointId\n    | TestnetEndpointId\n    | SandboxEndpointId\n    | MainnetV2EndpointId\n    | TestnetV2EndpointId\n    | SandboxV2EndpointId\n","export enum Environment {\n    LOCAL = 'local',\n    DEVNET = 'devnet',\n    TESTNET = 'testnet',\n    MAINNET = 'mainnet',\n}\n","export enum Stage {\n    MAINNET = 'mainnet',\n    TESTNET = 'testnet',\n    SANDBOX = 'sandbox',\n}\n","export enum EndpointVersion {\n    V1 = 'v1',\n    V2 = 'v2',\n}\n","export enum MessageLibVersionV2 {\n    SIMPLE = '0.0.2',\n    ULTRA_LIGHT_NODE_302 = '3.0.2',\n}\n\nexport enum MessageLibVersionV1 {\n    ULTRA_LIGHT_NODE_301 = '3.0.1',\n    ULTRA_LIGHT_NODE_201 = '2.0.1',\n}\n\nexport type MessageLibVersion = MessageLibVersionV2 | MessageLibVersionV1\n","// APPEND ONLY LIST\n// verify twice that the value is correct\nexport enum ChainKey {\n    ETHEREUM = 'ethereum',\n    GOERLI = 'goerli',\n    SEPOLIA = 'sepolia',\n    BSC = 'bsc',\n    BSC_TESTNET = 'bsc-testnet',\n    AVALANCHE = 'avalanche',\n    FUJI = 'fuji',\n    POLYGON = 'polygon',\n    MUMBAI = 'mumbai',\n    ARBITRUM = 'arbitrum',\n    ARBITURM_GOERLI = 'arbitrum-goerli',\n    OPTIMISM = 'optimism',\n    OPTIMISM_GOERLI = 'optimism-goerli',\n    FANTOM = 'fantom',\n    FANTOM_TESTNET = 'fantom-testnet',\n    SWIMMER = 'swimmer',\n    SWIMMER_TESTNET = 'swimmer-testnet',\n    DFK = 'dfk',\n    DFK_TESTNET = 'dfk-testnet',\n    HARMONY = 'harmony',\n    HARMONY_TESTNET = 'harmony-testnet',\n    DEXALOT = 'dexalot',\n    DEVALOT_TESTNET = 'dexalot-testnet',\n    CELO = 'celo',\n    ALFAJORES = 'alfajores',\n    MOONBEAM = 'moonbeam',\n    MOONBASE = 'moonbase',\n    MOONRIVER = 'moonriver',\n    INTAIN = 'intain',\n    INTAIN_TESTNET = 'intain-testnet',\n    FUSE = 'fuse',\n    FUSESPARK = 'fusespark',\n    GNOSIS = 'gnosis',\n    CHIADO = 'chiado',\n    APTOS = 'aptos',\n    APTOS_TESTNET = 'aptos-testnet',\n    KLAYTN = 'klaytn',\n    KLAYTN_BAOBAB = 'klaytn-baobab',\n    METIS = 'metis',\n    METIS_GOERLI = 'metis-goerli',\n    COREDAO = 'coredao',\n    COREDAO_TESTNET = 'coredao-testnet',\n    METER = 'meter',\n    METER_TESTNET = 'meter-testnet',\n    OKX = 'okx',\n    OKX_TESTNET = 'okx-testnet',\n    ZKSYNC = 'zksync',\n    ZKSYNC_TESTNET = 'zksync-testnet',\n    SHRAPNEL = 'shrapnel',\n    SHRAPNEL_TESTNET = 'shrapnel-testnet',\n    DOS = 'dos',\n    DOS_TESTNET = 'dos-testnet',\n    ZKEVM = 'zkevm',\n    ZKEVM_TESTNET = 'zkevm-testnet',\n    NOVA = 'nova',\n    TENET = 'tenet',\n    TENET_TESTNET = 'tenet-testnet',\n    CANTO = 'canto',\n    CANTO_TESTNET = 'canto-testnet',\n    KAVA = 'kava',\n    KAVA_TESTNET = 'kava-testnet',\n    SOLANA = 'solana',\n    SOLANA_TESTNET = 'solana-testnet',\n    LINEA_GOERLI = 'linea-goerli',\n    BASE_GOERLI = 'base-goerli',\n    AAVEGOTCHI_TESTNET = 'aavegotchi-testnet',\n\n    SCROLL = 'scroll',\n    SCROLL_TESTNET = 'scroll-testnet',\n\n    CATHAY_TESTNET = 'cathay-testnet',\n\n    ORDERLY = 'orderly',\n    ORDERLY_TESTNET = 'orderly-testnet',\n\n    BLOCKGEN_TESTNET = 'blockgen-testnet',\n    BEAM_TESTNET = 'beam-testnet',\n    BEAM = 'beam',\n    MANTLE = 'mantle',\n    MANTLE_TESTNET = 'mantle-testnet',\n    HUBBLE = 'hubble',\n    HUBBLE_TESTNET = 'hubble-testnet',\n    LINEA = 'linea',\n    BASE = 'base',\n    ZORA_TESTNET = 'zora-testnet',\n    ZORA = 'zora',\n    TOMO_TESTNET = 'tomo-testnet',\n    TOMO = 'tomo',\n    LOOT_TESTNET = 'loot-testnet',\n    LOOT = 'loot',\n    TELOS_TESTNET = 'telos-testnet',\n    TELOS = 'telos',\n\n    AURORA = 'aurora',\n    AURORA_TESTNET = 'aurora-testnet',\n\n    OPBNB = 'opbnb',\n    OPBNB_TESTNET = 'opbnb-testnet',\n\n    SHIMMER = 'shimmer',\n    SHIMMER_TESTNET = 'shimmer-testnet',\n\n    MONAD_TESTNET = 'monad-testnet',\n\n    LIF3 = 'lif3',\n    LIF3_TESTNET = 'lif3-testnet',\n\n    SPRUCE_TESTNET = 'spruce-testnet',\n    PGJJTK_TESTNET = 'pgjjtk-testnet',\n    ODA_TESTNET = 'oda-testnet',\n\n    KIWI_TESTNET = 'kiwi-testnet',\n    ASTAR = 'astar',\n    ASTAR_TESTNET = 'astar-testnet',\n\n    CONFLUX = 'conflux',\n    CONFLUX_TESTNET = 'conflux-testnet',\n\n    EON = 'eon',\n    EON_TESTNET = 'eon-testnet',\n\n    XPLA = 'xpla',\n    XPLA_TESTNET = 'xpla-testnet',\n\n    HOLESKY = 'holesky',\n\n    INJECTIVE_TESTNET = 'injective-testnet',\n\n    IDEX_TESTNET = 'idex-testnet',\n\n    ZKATANA_TESTNET = 'zkatana-testnet',\n    ZKATANA = 'zkatana',\n\n    MANTA = 'manta',\n    MANTA_TESTNET = 'manta-testnet',\n\n    FRAME_TESTNET = 'frame-testnet',\n\n    PGN = 'pgn',\n    PGN_TESTNET = 'pgn-testnet',\n\n    POLYGONCDK_TESTNET = 'polygoncdk-testnet',\n\n    ARBITRUM_SEPOLIA = 'arbitrum-sepolia',\n    OPTIMISM_SEPOLIA = 'optimism-sepolia',\n\n    BERA_TESTNET = 'bera-testnet',\n    VENN_TESTNET = 'venn-testnet',\n\n    RARIBLE_TESTNET = 'rarible-testnet',\n\n    GUNZILLA_TESTNET = 'gunzilla-testnet',\n\n    RC1_TESTNET = 'rc1-testnet',\n\n    KIWI2_TESTNET = 'kiwi2-testnet',\n\n    BB1 = 'bb1',\n    RARIBLE = 'rarible',\n\n    BLAST_TESTNET = 'blast-testnet',\n    BLAST = 'blast',\n\n    XAI_TESTNET = 'xai-testnet',\n    XAI = 'xai',\n    TANGIBLE_TESTNET = 'tangible-testnet',\n\n    BASE_SEPOLIA = 'base-sepolia',\n    MANTLE_SEPOLIA = 'mantle-sepolia',\n    ZKPOLYGON_SEPOLIA = 'zkpolygon-sepolia',\n    ZKSYNC_SEPOLIA = 'zksync-sepolia',\n    ZORA_SEPOLIA = 'zora-sepolia',\n\n    EXOCORE_TESTNET = 'exocore-testnet',\n\n    TILTYARD = 'tiltyard',\n\n    FRAXTAL_TESTNET = 'fraxtal-testnet',\n    FRAXTAL = 'fraxtal',\n\n    MODE_TESTNET = 'mode-testnet',\n    MODE = 'mode',\n\n    HEDERA_TESTNET = 'hedera-testnet',\n\n    REAL = 'real',\n    UNREAL_TESTNET = 'unreal-testnet',\n\n    MASA = 'masa',\n    MASA_TESTNET = 'masa-testnet',\n\n    MERLIN_TESTNET = 'merlin-testnet',\n    MERLIN = 'merlin',\n\n    HOMEVERSE = 'homeverse',\n    HOMEVERSE_TESTNET = 'homeverse-testnet',\n\n    ZKASTAR_TESTNET = 'zkastar-testnet',\n\n    AMOY_TESTNET = 'amoy-testnet',\n\n    DEGEN_TESTNET = 'degen-testnet',\n    DEGEN = 'degen',\n\n    XLAYER_TESTNET = 'xlayer-testnet',\n    XLAYER = 'xlayer',\n\n    FORM_TESTNET = 'form-testnet',\n    LL1_TESTNET = 'll1-testnet',\n    MANTASEP_TESTNET = 'mantasep-testnet',\n\n    SKALE_TESTNET = 'skale-testnet',\n    SKALE = 'skale',\n\n    ZIRCUIT_TESTNET = 'zircuit-testnet',\n    CAMP_TESTNET = 'camp-testnet',\n    OLIVE_TESTNET = 'olive-testnet',\n    SANKO_TESTNET = 'sanko-testnet',\n    SANKO = 'sanko',\n\n    BOB_TESTNET = 'bob-testnet',\n    BOB = 'bob',\n\n    // sandbox\n    ETHEREUM_SANDBOX = 'ethereum-sandbox',\n    BSC_SANDBOX = 'bsc-sandbox',\n    AVALANCHE_SANDBOX = 'avalanche-sandbox',\n    POLYGON_SANDBOX = 'polygon-sandbox',\n    APTOS_SANDBOX = 'aptos-sandbox',\n    OPTIMISM_SANDBOX = 'optimism-sandbox',\n    TRON_SANDBOX = 'tron-sandbox',\n    ARBITRUM_SANDBOX = 'arbitrum-sandbox',\n    FANTOM_SANDBOX = 'fantom-sandbox',\n    METIS_SANDBOX = 'metis-sandbox',\n    SOLANA_SANDBOX = 'solana-sandbox',\n\n    BOTANIX_TESTNET = 'botanix-testnet',\n\n    ZKLINK_TESTNET = 'zklink-testnet',\n    EBI_TESTNET = 'ebi-testnet',\n\n    TRONDEV = 'tron-dev',\n    TRON_TESTNET = 'tron-testnet',\n    TRON = 'tron',\n\n    SEI = 'sei',\n    SEI_TESTNET = 'sei-testnet',\n\n    EBI = 'ebi',\n\n    LINEASEP_TESTNET = 'lineasep-testnet',\n\n    IOTA = 'iota',\n\n    CYBER = 'cyber',\n    CYBER_TESTNET = 'cyber-testnet',\n\n    JOC = 'joc',\n    JOC_TESTNET = 'joc-testnet',\n\n    BESU1_TESTNET = 'besu1-testnet',\n    BOUNCEBIT_TESTNET = 'bouncebit-testnet',\n    MORPH_TESTNET = 'morph-testnet',\n\n    XCHAIN_TESTNET = 'xchain-testnet',\n    XCHAIN = 'xchain',\n\n    TAIKO_TESTNET = 'taiko-testnet',\n    TAIKO = 'taiko',\n\n    KINTO = 'kinto',\n\n    ETHERLINK_TESTNET = 'etherlink-testnet',\n    ETHERLINK = 'etherlink',\n}\n","import { ChainKey, EndpointId } from '../enums'\n\nexport const CHAIN_KEY: { [endpointId in EndpointId]: ChainKey } = {\n    [EndpointId.ETHEREUM_MAINNET]: ChainKey.ETHEREUM,\n    [EndpointId.BSC_MAINNET]: ChainKey.BSC,\n    [EndpointId.AVALANCHE_MAINNET]: ChainKey.AVALANCHE,\n    [EndpointId.POLYGON_MAINNET]: ChainKey.POLYGON,\n    [EndpointId.ARBITRUM_MAINNET]: ChainKey.ARBITRUM,\n    [EndpointId.OPTIMISM_MAINNET]: ChainKey.OPTIMISM,\n    [EndpointId.FANTOM_MAINNET]: ChainKey.FANTOM,\n    [EndpointId.SWIMMER_MAINNET]: ChainKey.SWIMMER,\n    [EndpointId.DFK_MAINNET]: ChainKey.DFK,\n    [EndpointId.HARMONY_MAINNET]: ChainKey.HARMONY,\n    [EndpointId.DEXALOT_MAINNET]: ChainKey.DEXALOT,\n    [EndpointId.CELO_MAINNET]: ChainKey.CELO,\n    [EndpointId.MOONBEAM_MAINNET]: ChainKey.MOONBEAM,\n    [EndpointId.INTAIN_MAINNET]: ChainKey.INTAIN,\n    [EndpointId.FUSE_MAINNET]: ChainKey.FUSE,\n    [EndpointId.GNOSIS_MAINNET]: ChainKey.GNOSIS,\n    [EndpointId.APTOS_MAINNET]: ChainKey.APTOS,\n    [EndpointId.KLAYTN_MAINNET]: ChainKey.KLAYTN,\n    [EndpointId.METIS_MAINNET]: ChainKey.METIS,\n    [EndpointId.COREDAO_MAINNET]: ChainKey.COREDAO,\n    [EndpointId.METER_MAINNET]: ChainKey.METER,\n    [EndpointId.OKX_MAINNET]: ChainKey.OKX,\n    [EndpointId.GOERLI_MAINNET]: ChainKey.GOERLI,\n    [EndpointId.ZKSYNC_MAINNET]: ChainKey.ZKSYNC,\n    [EndpointId.SHRAPNEL_MAINNET]: ChainKey.SHRAPNEL,\n    [EndpointId.DOS_MAINNET]: ChainKey.DOS,\n    [EndpointId.ZKPOLYGON_MAINNET]: ChainKey.ZKEVM,\n    [EndpointId.SEPOLIA_MAINNET]: ChainKey.SEPOLIA,\n    [EndpointId.MOONRIVER_MAINNET]: ChainKey.MOONRIVER,\n    [EndpointId.NOVA_MAINNET]: ChainKey.NOVA,\n    [EndpointId.TENET_MAINNET]: ChainKey.TENET,\n    [EndpointId.CANTO_MAINNET]: ChainKey.CANTO,\n    [EndpointId.KAVA_MAINNET]: ChainKey.KAVA,\n    [EndpointId.MANTLE_MAINNET]: ChainKey.MANTLE,\n    [EndpointId.HUBBLE_MAINNET]: ChainKey.HUBBLE,\n    [EndpointId.ZKCONSENSYS_MAINNET]: ChainKey.LINEA,\n    [EndpointId.BASE_MAINNET]: ChainKey.BASE,\n    [EndpointId.ZORA_MAINNET]: ChainKey.ZORA,\n    [EndpointId.TOMO_MAINNET]: ChainKey.TOMO,\n    [EndpointId.LOOT_MAINNET]: ChainKey.LOOT,\n    [EndpointId.TELOS_MAINNET]: ChainKey.TELOS,\n    [EndpointId.MERITCIRCLE_MAINNET]: ChainKey.BEAM,\n    [EndpointId.OPBNB_MAINNET]: ChainKey.OPBNB,\n    [EndpointId.LIF3_MAINNET]: ChainKey.LIF3,\n    [EndpointId.ASTAR_MAINNET]: ChainKey.ASTAR,\n    [EndpointId.AURORA_MAINNET]: ChainKey.AURORA,\n    [EndpointId.CONFLUX_MAINNET]: ChainKey.CONFLUX,\n    [EndpointId.ORDERLY_MAINNET]: ChainKey.ORDERLY,\n    [EndpointId.SCROLL_MAINNET]: ChainKey.SCROLL,\n    [EndpointId.EON_MAINNET]: ChainKey.EON,\n    [EndpointId.XPLA_MAINNET]: ChainKey.XPLA,\n    [EndpointId.MANTA_MAINNET]: ChainKey.MANTA,\n    [EndpointId.PGN_MAINNET]: ChainKey.PGN,\n    [EndpointId.SHIMMER_MAINNET]: ChainKey.SHIMMER,\n    [EndpointId.BB1_MAINNET]: ChainKey.BB1,\n    [EndpointId.RARIBLE_MAINNET]: ChainKey.RARIBLE,\n    [EndpointId.XAI_MAINNET]: ChainKey.XAI,\n    [EndpointId.REAL_MAINNET]: ChainKey.REAL,\n    [EndpointId.TILTYARD_MAINNET]: ChainKey.TILTYARD,\n    [EndpointId.FRAXTAL_MAINNET]: ChainKey.FRAXTAL,\n    [EndpointId.TRON_MAINNET]: ChainKey.TRON,\n    [EndpointId.ZKATANA_MAINNET]: ChainKey.ZKATANA,\n    [EndpointId.MODE_MAINNET]: ChainKey.MODE,\n    [EndpointId.BLAST_MAINNET]: ChainKey.BLAST,\n    [EndpointId.MASA_MAINNET]: ChainKey.MASA,\n    [EndpointId.HOMEVERSE_MAINNET]: ChainKey.HOMEVERSE,\n    [EndpointId.MERLIN_MAINNET]: ChainKey.MERLIN,\n    [EndpointId.DEGEN_MAINNET]: ChainKey.DEGEN,\n    [EndpointId.SKALE_MAINNET]: ChainKey.SKALE,\n    [EndpointId.XLAYER_MAINNET]: ChainKey.XLAYER,\n    [EndpointId.BOB_MAINNET]: ChainKey.BOB,\n    [EndpointId.SANKO_MAINNET]: ChainKey.SANKO,\n    [EndpointId.SEI_MAINNET]: ChainKey.SEI,\n    [EndpointId.KINTO_MAINNET]: ChainKey.KINTO,\n    [EndpointId.EBI_MAINNET]: ChainKey.EBI,\n    [EndpointId.IOTA_MAINNET]: ChainKey.IOTA,\n    [EndpointId.CYBER_MAINNET]: ChainKey.CYBER,\n    [EndpointId.JOC_MAINNET]: ChainKey.JOC,\n    [EndpointId.SOLANA_MAINNET]: ChainKey.SOLANA,\n    [EndpointId.TAIKO_MAINNET]: ChainKey.TAIKO,\n    [EndpointId.XCHAIN_MAINNET]: ChainKey.XCHAIN,\n    [EndpointId.ETHERLINK_MAINNET]: ChainKey.ETHERLINK,\n\n    // v2 mainnet\n    [EndpointId.ETHEREUM_V2_MAINNET]: ChainKey.ETHEREUM,\n    [EndpointId.BSC_V2_MAINNET]: ChainKey.BSC,\n    [EndpointId.AVALANCHE_V2_MAINNET]: ChainKey.AVALANCHE,\n    [EndpointId.POLYGON_V2_MAINNET]: ChainKey.POLYGON,\n    [EndpointId.ARBITRUM_V2_MAINNET]: ChainKey.ARBITRUM,\n    [EndpointId.OPTIMISM_V2_MAINNET]: ChainKey.OPTIMISM,\n    [EndpointId.FANTOM_V2_MAINNET]: ChainKey.FANTOM,\n    [EndpointId.SWIMMER_V2_MAINNET]: ChainKey.SWIMMER,\n    [EndpointId.DFK_V2_MAINNET]: ChainKey.DFK,\n    [EndpointId.HARMONY_V2_MAINNET]: ChainKey.HARMONY,\n    [EndpointId.DEXALOT_V2_MAINNET]: ChainKey.DEXALOT,\n    [EndpointId.CELO_V2_MAINNET]: ChainKey.CELO,\n    [EndpointId.MOONBEAM_V2_MAINNET]: ChainKey.MOONBEAM,\n    [EndpointId.INTAIN_V2_MAINNET]: ChainKey.INTAIN,\n    [EndpointId.FUSE_V2_MAINNET]: ChainKey.FUSE,\n    [EndpointId.GNOSIS_V2_MAINNET]: ChainKey.GNOSIS,\n    [EndpointId.KLAYTN_V2_MAINNET]: ChainKey.KLAYTN,\n    [EndpointId.METIS_V2_MAINNET]: ChainKey.METIS,\n    [EndpointId.COREDAO_V2_MAINNET]: ChainKey.COREDAO,\n    [EndpointId.GOERLI_V2_MAINNET]: ChainKey.GOERLI,\n    [EndpointId.OKX_V2_MAINNET]: ChainKey.OKX,\n    [EndpointId.CANTO_V2_MAINNET]: ChainKey.CANTO,\n    [EndpointId.ZKSYNC_V2_MAINNET]: ChainKey.ZKSYNC,\n    [EndpointId.SHRAPNEL_V2_MAINNET]: ChainKey.SHRAPNEL,\n    [EndpointId.DOS_V2_MAINNET]: ChainKey.DOS,\n    [EndpointId.ZKPOLYGON_V2_MAINNET]: ChainKey.ZKEVM,\n    [EndpointId.SEPOLIA_V2_MAINNET]: ChainKey.SEPOLIA,\n    [EndpointId.MOONRIVER_V2_MAINNET]: ChainKey.MOONRIVER,\n    [EndpointId.TENET_V2_MAINNET]: ChainKey.TENET,\n    [EndpointId.NOVA_V2_MAINNET]: ChainKey.NOVA,\n    [EndpointId.METER_V2_MAINNET]: ChainKey.METER,\n    [EndpointId.KAVA_V2_MAINNET]: ChainKey.KAVA,\n    [EndpointId.MANTLE_V2_MAINNET]: ChainKey.MANTLE,\n    [EndpointId.HUBBLE_V2_MAINNET]: ChainKey.HUBBLE,\n    [EndpointId.ZKCONSENSYS_V2_MAINNET]: ChainKey.LINEA,\n    [EndpointId.BASE_V2_MAINNET]: ChainKey.BASE,\n    [EndpointId.ZORA_V2_MAINNET]: ChainKey.ZORA,\n    [EndpointId.TOMO_V2_MAINNET]: ChainKey.TOMO,\n    [EndpointId.LOOT_V2_MAINNET]: ChainKey.LOOT,\n    [EndpointId.TELOS_V2_MAINNET]: ChainKey.TELOS,\n    [EndpointId.MERITCIRCLE_V2_MAINNET]: ChainKey.BEAM,\n    [EndpointId.OPBNB_V2_MAINNET]: ChainKey.OPBNB,\n    [EndpointId.LIF3_V2_MAINNET]: ChainKey.LIF3,\n    [EndpointId.ASTAR_V2_MAINNET]: ChainKey.ASTAR,\n    [EndpointId.AURORA_V2_MAINNET]: ChainKey.AURORA,\n    [EndpointId.CONFLUX_V2_MAINNET]: ChainKey.CONFLUX,\n    [EndpointId.ORDERLY_V2_MAINNET]: ChainKey.ORDERLY,\n    [EndpointId.SCROLL_V2_MAINNET]: ChainKey.SCROLL,\n    [EndpointId.EON_V2_MAINNET]: ChainKey.EON,\n    [EndpointId.XPLA_V2_MAINNET]: ChainKey.XPLA,\n    [EndpointId.MANTA_V2_MAINNET]: ChainKey.MANTA,\n    [EndpointId.PGN_V2_MAINNET]: ChainKey.PGN,\n    [EndpointId.SHIMMER_V2_MAINNET]: ChainKey.SHIMMER,\n    [EndpointId.BB1_V2_MAINNET]: ChainKey.BB1,\n    [EndpointId.RARIBLE_V2_MAINNET]: ChainKey.RARIBLE,\n    [EndpointId.XAI_V2_MAINNET]: ChainKey.XAI,\n    [EndpointId.REAL_V2_MAINNET]: ChainKey.REAL,\n    [EndpointId.TILTYARD_V2_MAINNET]: ChainKey.TILTYARD,\n    [EndpointId.FRAXTAL_V2_MAINNET]: ChainKey.FRAXTAL,\n    [EndpointId.MODE_V2_MAINNET]: ChainKey.MODE,\n    [EndpointId.TRON_V2_MAINNET]: ChainKey.TRON,\n    [EndpointId.BLAST_V2_MAINNET]: ChainKey.BLAST,\n    [EndpointId.ZKATANA_V2_MAINNET]: ChainKey.ZKATANA,\n    [EndpointId.MASA_V2_MAINNET]: ChainKey.MASA,\n    [EndpointId.HOMEVERSE_V2_MAINNET]: ChainKey.HOMEVERSE,\n    [EndpointId.MERLIN_V2_MAINNET]: ChainKey.MERLIN,\n    [EndpointId.DEGEN_V2_MAINNET]: ChainKey.DEGEN,\n    [EndpointId.SKALE_V2_MAINNET]: ChainKey.SKALE,\n    [EndpointId.XLAYER_V2_MAINNET]: ChainKey.XLAYER,\n    [EndpointId.BOB_V2_MAINNET]: ChainKey.BOB,\n    [EndpointId.SANKO_V2_MAINNET]: ChainKey.SANKO,\n    [EndpointId.SEI_V2_MAINNET]: ChainKey.SEI,\n    [EndpointId.KINTO_V2_MAINNET]: ChainKey.KINTO,\n    [EndpointId.EBI_V2_MAINNET]: ChainKey.EBI,\n    [EndpointId.IOTA_V2_MAINNET]: ChainKey.IOTA,\n    [EndpointId.CYBER_V2_MAINNET]: ChainKey.CYBER,\n    [EndpointId.JOC_V2_MAINNET]: ChainKey.JOC,\n    [EndpointId.SOLANA_V2_MAINNET]: ChainKey.SOLANA,\n    [EndpointId.TAIKO_V2_MAINNET]: ChainKey.TAIKO,\n    [EndpointId.XCHAIN_V2_MAINNET]: ChainKey.XCHAIN,\n    [EndpointId.ETHERLINK_V2_MAINNET]: ChainKey.ETHERLINK,\n\n    // testnet\n    [EndpointId.ETHEREUM_TESTNET]: ChainKey.SEPOLIA,\n    [EndpointId.BSC_TESTNET]: ChainKey.BSC_TESTNET,\n    [EndpointId.POLYGON_TESTNET]: ChainKey.MUMBAI,\n    [EndpointId.FANTOM_TESTNET]: ChainKey.FANTOM_TESTNET,\n    [EndpointId.HARMONY_TESTNET]: ChainKey.HARMONY_TESTNET,\n    [EndpointId.AVALANCHE_TESTNET]: ChainKey.FUJI,\n    [EndpointId.ARBITRUM_TESTNET]: ChainKey.ARBITRUM_SEPOLIA,\n    [EndpointId.OPTIMISM_TESTNET]: ChainKey.OPTIMISM_SEPOLIA,\n    [EndpointId.DFK_TESTNET]: ChainKey.DFK_TESTNET,\n    [EndpointId.SWIMMER_TESTNET]: ChainKey.SWIMMER_TESTNET,\n    [EndpointId.DEXALOT_TESTNET]: ChainKey.DEVALOT_TESTNET,\n    [EndpointId.GNOSIS_TESTNET]: ChainKey.CHIADO,\n    [EndpointId.CELO_TESTNET]: ChainKey.ALFAJORES,\n    [EndpointId.APTOS_TESTNET]: ChainKey.APTOS_TESTNET,\n    [EndpointId.MOONBEAM_TESTNET]: ChainKey.MOONBASE,\n    [EndpointId.FUSE_TESTNET]: ChainKey.FUSESPARK,\n    [EndpointId.ZKSYNC_TESTNET]: ChainKey.ZKSYNC_TESTNET,\n    [EndpointId.SHRAPNEL_TESTNET]: ChainKey.SHRAPNEL_TESTNET,\n    [EndpointId.DOS_TESTNET]: ChainKey.DOS_TESTNET,\n    [EndpointId.KLAYTN_TESTNET]: ChainKey.KLAYTN_BAOBAB,\n    [EndpointId.METIS_TESTNET]: ChainKey.METIS_GOERLI,\n    [EndpointId.INTAIN_TESTNET]: ChainKey.INTAIN_TESTNET,\n    [EndpointId.COREDAO_TESTNET]: ChainKey.COREDAO_TESTNET,\n    [EndpointId.ZKPOLYGON_TESTNET]: ChainKey.ZKEVM_TESTNET,\n    [EndpointId.OKX_TESTNET]: ChainKey.OKX_TESTNET,\n    [EndpointId.SOLANA_TESTNET]: ChainKey.SOLANA_TESTNET,\n    [EndpointId.METER_TESTNET]: ChainKey.METER_TESTNET,\n    [EndpointId.ZKCONSENSYS_TESTNET]: ChainKey.LINEA_GOERLI,\n    [EndpointId.SEPOLIA_TESTNET]: ChainKey.SEPOLIA,\n    [EndpointId.BASE_TESTNET]: ChainKey.BASE_GOERLI,\n    [EndpointId.AAVEGOTCHI_TESTNET]: ChainKey.AAVEGOTCHI_TESTNET,\n    [EndpointId.SCROLL_TESTNET]: ChainKey.SCROLL_TESTNET,\n    [EndpointId.CATHAY_TESTNET]: ChainKey.CATHAY_TESTNET,\n    [EndpointId.KAVA_TESTNET]: ChainKey.KAVA_TESTNET,\n    [EndpointId.TENET_TESTNET]: ChainKey.TENET_TESTNET,\n    [EndpointId.CANTO_TESTNET]: ChainKey.CANTO_TESTNET,\n    [EndpointId.ORDERLY_TESTNET]: ChainKey.ORDERLY_TESTNET,\n    [EndpointId.BLOCKGEN_TESTNET]: ChainKey.BLOCKGEN_TESTNET,\n    [EndpointId.MERITCIRCLE_TESTNET]: ChainKey.BEAM_TESTNET,\n    [EndpointId.MANTLE_TESTNET]: ChainKey.MANTLE_TESTNET,\n    [EndpointId.HUBBLE_TESTNET]: ChainKey.HUBBLE_TESTNET,\n    [EndpointId.ZORA_TESTNET]: ChainKey.ZORA_TESTNET,\n    [EndpointId.TOMO_TESTNET]: ChainKey.TOMO_TESTNET,\n    [EndpointId.LOOT_TESTNET]: ChainKey.LOOT_TESTNET,\n    [EndpointId.TELOS_TESTNET]: ChainKey.TELOS_TESTNET,\n    [EndpointId.AURORA_TESTNET]: ChainKey.AURORA_TESTNET,\n    [EndpointId.OPBNB_TESTNET]: ChainKey.OPBNB_TESTNET,\n    [EndpointId.SHIMMER_TESTNET]: ChainKey.SHIMMER_TESTNET,\n    [EndpointId.MONAD_TESTNET]: ChainKey.MONAD_TESTNET,\n    [EndpointId.LIF3_TESTNET]: ChainKey.LIF3_TESTNET,\n    [EndpointId.SPRUCE_TESTNET]: ChainKey.SPRUCE_TESTNET,\n    [EndpointId.PGJJTK_TESTNET]: ChainKey.PGJJTK_TESTNET,\n    [EndpointId.ODA_TESTNET]: ChainKey.ODA_TESTNET,\n    [EndpointId.KIWI_TESTNET]: ChainKey.KIWI_TESTNET,\n    [EndpointId.ASTAR_TESTNET]: ChainKey.ASTAR_TESTNET,\n    [EndpointId.CONFLUX_TESTNET]: ChainKey.CONFLUX_TESTNET,\n    [EndpointId.EON_TESTNET]: ChainKey.EON_TESTNET,\n    [EndpointId.XPLA_TESTNET]: ChainKey.XPLA_TESTNET,\n    [EndpointId.HOLESKY_TESTNET]: ChainKey.HOLESKY,\n    [EndpointId.INJECTIVE_TESTNET]: ChainKey.INJECTIVE_TESTNET,\n    [EndpointId.IDEX_TESTNET]: ChainKey.IDEX_TESTNET,\n    [EndpointId.ZKATANA_TESTNET]: ChainKey.ZKATANA_TESTNET,\n    [EndpointId.MANTA_TESTNET]: ChainKey.MANTA_TESTNET,\n    [EndpointId.FRAME_TESTNET]: ChainKey.FRAME_TESTNET,\n    [EndpointId.PGN_TESTNET]: ChainKey.PGN_TESTNET,\n    [EndpointId.POLYGONCDK_TESTNET]: ChainKey.POLYGONCDK_TESTNET,\n    [EndpointId.ARBSEP_TESTNET]: ChainKey.ARBITRUM_SEPOLIA,\n    [EndpointId.OPTSEP_TESTNET]: ChainKey.OPTIMISM_SEPOLIA,\n    [EndpointId.BERA_TESTNET]: ChainKey.BERA_TESTNET,\n    [EndpointId.VENN_TESTNET]: ChainKey.VENN_TESTNET,\n    [EndpointId.RARIBLE_TESTNET]: ChainKey.RARIBLE_TESTNET,\n    [EndpointId.GUNZILLA_TESTNET]: ChainKey.GUNZILLA_TESTNET,\n    [EndpointId.RC1_TESTNET]: ChainKey.RC1_TESTNET,\n    [EndpointId.ETHERLINK_TESTNET]: ChainKey.ETHERLINK_TESTNET,\n    [EndpointId.KIWI2_TESTNET]: ChainKey.KIWI2_TESTNET,\n    [EndpointId.JOC_TESTNET]: ChainKey.JOC_TESTNET,\n    [EndpointId.BLAST_TESTNET]: ChainKey.BLAST_TESTNET,\n    [EndpointId.TRON_TESTNET]: ChainKey.TRON_TESTNET,\n    [EndpointId.XAI_TESTNET]: ChainKey.XAI_TESTNET,\n    [EndpointId.TANGIBLE_TESTNET]: ChainKey.TANGIBLE_TESTNET,\n    [EndpointId.BASESEP_TESTNET]: ChainKey.BASE_SEPOLIA,\n    [EndpointId.MANTLESEP_TESTNET]: ChainKey.MANTLE_SEPOLIA,\n    [EndpointId.ZKPOLYGONSEP_TESTNET]: ChainKey.ZKPOLYGON_SEPOLIA,\n    [EndpointId.ZKSYNCSEP_TESTNET]: ChainKey.ZKSYNC_SEPOLIA,\n    [EndpointId.ZORASEP_TESTNET]: ChainKey.ZORA_SEPOLIA,\n    [EndpointId.EXOCORE_TESTNET]: ChainKey.EXOCORE_TESTNET,\n    [EndpointId.FRAXTAL_TESTNET]: ChainKey.FRAXTAL_TESTNET,\n    [EndpointId.SEI_TESTNET]: ChainKey.SEI_TESTNET,\n    [EndpointId.MODE_TESTNET]: ChainKey.MODE_TESTNET,\n    [EndpointId.HEDERA_TESTNET]: ChainKey.HEDERA_TESTNET,\n    [EndpointId.UNREAL_TESTNET]: ChainKey.UNREAL_TESTNET,\n    [EndpointId.MASA_TESTNET]: ChainKey.MASA_TESTNET,\n    [EndpointId.MERLIN_TESTNET]: ChainKey.MERLIN_TESTNET,\n    [EndpointId.HOMEVERSE_TESTNET]: ChainKey.HOMEVERSE_TESTNET,\n    [EndpointId.ZKASTAR_TESTNET]: ChainKey.ZKASTAR_TESTNET,\n    [EndpointId.AMOY_TESTNET]: ChainKey.AMOY_TESTNET,\n    [EndpointId.DEGEN_TESTNET]: ChainKey.DEGEN_TESTNET,\n    [EndpointId.XLAYER_TESTNET]: ChainKey.XLAYER_TESTNET,\n    [EndpointId.FORM_TESTNET]: ChainKey.FORM_TESTNET,\n    [EndpointId.LL1_TESTNET]: ChainKey.LL1_TESTNET,\n    [EndpointId.MANTASEP_TESTNET]: ChainKey.MANTASEP_TESTNET,\n    [EndpointId.SKALE_TESTNET]: ChainKey.SKALE_TESTNET,\n    [EndpointId.TAIKO_TESTNET]: ChainKey.TAIKO_TESTNET,\n    [EndpointId.ZIRCUIT_TESTNET]: ChainKey.ZIRCUIT_TESTNET,\n    [EndpointId.CAMP_TESTNET]: ChainKey.CAMP_TESTNET,\n    [EndpointId.OLIVE_TESTNET]: ChainKey.OLIVE_TESTNET,\n    [EndpointId.SANKO_TESTNET]: ChainKey.SANKO_TESTNET,\n    [EndpointId.BOB_TESTNET]: ChainKey.BOB_TESTNET,\n    [EndpointId.CYBER_TESTNET]: ChainKey.CYBER_TESTNET,\n    [EndpointId.BOTANIX_TESTNET]: ChainKey.BOTANIX_TESTNET,\n    [EndpointId.XCHAIN_TESTNET]: ChainKey.XCHAIN_TESTNET,\n    [EndpointId.ZKLINK_TESTNET]: ChainKey.ZKLINK_TESTNET,\n    [EndpointId.EBI_TESTNET]: ChainKey.EBI_TESTNET,\n    [EndpointId.LINEASEP_TESTNET]: ChainKey.LINEASEP_TESTNET,\n    [EndpointId.BESU1_TESTNET]: ChainKey.BESU1_TESTNET,\n    [EndpointId.BOUNCEBIT_TESTNET]: ChainKey.BOUNCEBIT_TESTNET,\n    [EndpointId.MORPH_TESTNET]: ChainKey.MORPH_TESTNET,\n\n    // v2 testnet\n    [EndpointId.ETHEREUM_V2_TESTNET]: ChainKey.SEPOLIA,\n    [EndpointId.POLYGON_V2_TESTNET]: ChainKey.MUMBAI,\n    [EndpointId.ARBITRUM_V2_TESTNET]: ChainKey.ARBITRUM_SEPOLIA,\n    [EndpointId.OPTIMISM_V2_TESTNET]: ChainKey.OPTIMISM_SEPOLIA,\n    [EndpointId.AVALANCHE_V2_TESTNET]: ChainKey.FUJI,\n\n    [EndpointId.BSC_V2_TESTNET]: ChainKey.BSC_TESTNET,\n    [EndpointId.FANTOM_V2_TESTNET]: ChainKey.FANTOM_TESTNET,\n    [EndpointId.DFK_V2_TESTNET]: ChainKey.DFK_TESTNET,\n    [EndpointId.HARMONY_V2_TESTNET]: ChainKey.HARMONY_TESTNET,\n    [EndpointId.DEXALOT_V2_TESTNET]: ChainKey.DEVALOT_TESTNET,\n    [EndpointId.CELO_V2_TESTNET]: ChainKey.ALFAJORES,\n    [EndpointId.MOONBEAM_V2_TESTNET]: ChainKey.MOONBASE,\n    [EndpointId.FUSE_V2_TESTNET]: ChainKey.FUSESPARK,\n    [EndpointId.GNOSIS_V2_TESTNET]: ChainKey.CHIADO,\n    [EndpointId.ZKSYNC_V2_TESTNET]: ChainKey.ZKSYNC_TESTNET,\n    [EndpointId.SHRAPNEL_V2_TESTNET]: ChainKey.SHRAPNEL_TESTNET,\n    [EndpointId.DOS_V2_TESTNET]: ChainKey.DOS_TESTNET,\n    [EndpointId.KLAYTN_V2_TESTNET]: ChainKey.KLAYTN_BAOBAB,\n    [EndpointId.METIS_V2_TESTNET]: ChainKey.METIS_GOERLI,\n    [EndpointId.COREDAO_V2_TESTNET]: ChainKey.COREDAO_TESTNET,\n    [EndpointId.OKX_V2_TESTNET]: ChainKey.OKX_TESTNET,\n    [EndpointId.METER_V2_TESTNET]: ChainKey.METER_TESTNET,\n    [EndpointId.ZKCONSENSYS_V2_TESTNET]: ChainKey.LINEA_GOERLI,\n    [EndpointId.ZKPOLYGON_V2_TESTNET]: ChainKey.ZKEVM_TESTNET,\n    [EndpointId.CANTO_V2_TESTNET]: ChainKey.CANTO_TESTNET,\n    [EndpointId.BASE_V2_TESTNET]: ChainKey.BASE_GOERLI,\n    [EndpointId.SEPOLIA_V2_TESTNET]: ChainKey.SEPOLIA,\n    [EndpointId.AAVEGOTCHI_V2_TESTNET]: ChainKey.AAVEGOTCHI_TESTNET,\n    [EndpointId.SCROLL_V2_TESTNET]: ChainKey.SCROLL_TESTNET,\n    [EndpointId.CATHAY_V2_TESTNET]: ChainKey.CATHAY_TESTNET,\n    [EndpointId.KAVA_V2_TESTNET]: ChainKey.KAVA_TESTNET,\n    [EndpointId.TENET_V2_TESTNET]: ChainKey.TENET_TESTNET,\n    [EndpointId.ORDERLY_V2_TESTNET]: ChainKey.ORDERLY_TESTNET,\n    [EndpointId.BLOCKGEN_V2_TESTNET]: ChainKey.BLOCKGEN_TESTNET,\n    [EndpointId.MERITCIRCLE_V2_TESTNET]: ChainKey.BEAM_TESTNET,\n    [EndpointId.MANTLE_V2_TESTNET]: ChainKey.MANTLE_TESTNET,\n    [EndpointId.HUBBLE_V2_TESTNET]: ChainKey.HUBBLE_TESTNET,\n    [EndpointId.ZORA_V2_TESTNET]: ChainKey.ZORA_TESTNET,\n    [EndpointId.TOMO_V2_TESTNET]: ChainKey.TOMO_TESTNET,\n    [EndpointId.LOOT_V2_TESTNET]: ChainKey.LOOT_TESTNET,\n    [EndpointId.TELOS_V2_TESTNET]: ChainKey.TELOS_TESTNET,\n    [EndpointId.AURORA_V2_TESTNET]: ChainKey.AURORA_TESTNET,\n    [EndpointId.OPBNB_V2_TESTNET]: ChainKey.OPBNB_TESTNET,\n    [EndpointId.SHIMMER_V2_TESTNET]: ChainKey.SHIMMER_TESTNET,\n    [EndpointId.MONAD_V2_TESTNET]: ChainKey.MONAD_TESTNET,\n    [EndpointId.LIF3_V2_TESTNET]: ChainKey.LIF3_TESTNET,\n    [EndpointId.SPRUCE_V2_TESTNET]: ChainKey.SPRUCE_TESTNET,\n    [EndpointId.PGJJTK_V2_TESTNET]: ChainKey.PGJJTK_TESTNET,\n    [EndpointId.ODA_V2_TESTNET]: ChainKey.ODA_TESTNET,\n    [EndpointId.KIWI_V2_TESTNET]: ChainKey.KIWI_TESTNET,\n    [EndpointId.ASTAR_V2_TESTNET]: ChainKey.ASTAR_TESTNET,\n    [EndpointId.CONFLUX_V2_TESTNET]: ChainKey.CONFLUX_TESTNET,\n    [EndpointId.EON_V2_TESTNET]: ChainKey.EON_TESTNET,\n    [EndpointId.XPLA_V2_TESTNET]: ChainKey.XPLA_TESTNET,\n    [EndpointId.HOLESKY_V2_TESTNET]: ChainKey.HOLESKY,\n    [EndpointId.INJECTIVE_V2_TESTNET]: ChainKey.INJECTIVE_TESTNET,\n    [EndpointId.IDEX_V2_TESTNET]: ChainKey.IDEX_TESTNET,\n    [EndpointId.ZKATANA_V2_TESTNET]: ChainKey.ZKATANA_TESTNET,\n    [EndpointId.MANTA_V2_TESTNET]: ChainKey.MANTA_TESTNET,\n    [EndpointId.FRAME_V2_TESTNET]: ChainKey.FRAME_TESTNET,\n    [EndpointId.PGN_V2_TESTNET]: ChainKey.PGN_TESTNET,\n    [EndpointId.POLYGONCDK_V2_TESTNET]: ChainKey.POLYGONCDK_TESTNET,\n    [EndpointId.ARBSEP_V2_TESTNET]: ChainKey.ARBITRUM_SEPOLIA,\n    [EndpointId.OPTSEP_V2_TESTNET]: ChainKey.OPTIMISM_SEPOLIA,\n    [EndpointId.BERA_V2_TESTNET]: ChainKey.BERA_TESTNET,\n    [EndpointId.VENN_V2_TESTNET]: ChainKey.VENN_TESTNET,\n    [EndpointId.RARIBLE_V2_TESTNET]: ChainKey.RARIBLE_TESTNET,\n    [EndpointId.GUNZILLA_V2_TESTNET]: ChainKey.GUNZILLA_TESTNET,\n    [EndpointId.RC1_V2_TESTNET]: ChainKey.RC1_TESTNET,\n    [EndpointId.ETHERLINK_V2_TESTNET]: ChainKey.ETHERLINK_TESTNET,\n    [EndpointId.KIWI2_V2_TESTNET]: ChainKey.KIWI2_TESTNET,\n    [EndpointId.JOC_V2_TESTNET]: ChainKey.JOC_TESTNET,\n    [EndpointId.BLAST_V2_TESTNET]: ChainKey.BLAST_TESTNET,\n    [EndpointId.XAI_V2_TESTNET]: ChainKey.XAI_TESTNET,\n    [EndpointId.TANGIBLE_V2_TESTNET]: ChainKey.TANGIBLE_TESTNET,\n    [EndpointId.BASESEP_V2_TESTNET]: ChainKey.BASE_SEPOLIA,\n    [EndpointId.MANTLESEP_V2_TESTNET]: ChainKey.MANTLE_SEPOLIA,\n    [EndpointId.ZKPOLYGONSEP_V2_TESTNET]: ChainKey.ZKPOLYGON_SEPOLIA,\n    [EndpointId.ZKSYNCSEP_V2_TESTNET]: ChainKey.ZKSYNC_SEPOLIA,\n    [EndpointId.ZORASEP_V2_TESTNET]: ChainKey.ZORA_SEPOLIA,\n    [EndpointId.TRON_V2_TESTNET]: ChainKey.TRON_TESTNET,\n    [EndpointId.EXOCORE_V2_TESTNET]: ChainKey.EXOCORE_TESTNET,\n    [EndpointId.FRAXTAL_V2_TESTNET]: ChainKey.FRAXTAL_TESTNET,\n    [EndpointId.SEI_V2_TESTNET]: ChainKey.SEI_TESTNET,\n    [EndpointId.MODE_V2_TESTNET]: ChainKey.MODE_TESTNET,\n    [EndpointId.HEDERA_V2_TESTNET]: ChainKey.HEDERA_TESTNET,\n    [EndpointId.UNREAL_V2_TESTNET]: ChainKey.UNREAL_TESTNET,\n    [EndpointId.MASA_V2_TESTNET]: ChainKey.MASA_TESTNET,\n    [EndpointId.MERLIN_V2_TESTNET]: ChainKey.MERLIN_TESTNET,\n    [EndpointId.HOMEVERSE_V2_TESTNET]: ChainKey.HOMEVERSE_TESTNET,\n    [EndpointId.ZKASTAR_V2_TESTNET]: ChainKey.ZKASTAR_TESTNET,\n    [EndpointId.AMOY_V2_TESTNET]: ChainKey.AMOY_TESTNET,\n    [EndpointId.DEGEN_V2_TESTNET]: ChainKey.DEGEN_TESTNET,\n    [EndpointId.XLAYER_V2_TESTNET]: ChainKey.XLAYER_TESTNET,\n    [EndpointId.FORM_V2_TESTNET]: ChainKey.FORM_TESTNET,\n    [EndpointId.LL1_V2_TESTNET]: ChainKey.LL1_TESTNET,\n    [EndpointId.MANTASEP_V2_TESTNET]: ChainKey.MANTASEP_TESTNET,\n    [EndpointId.SKALE_V2_TESTNET]: ChainKey.SKALE_TESTNET,\n    [EndpointId.TAIKO_V2_TESTNET]: ChainKey.TAIKO_TESTNET,\n    [EndpointId.ZIRCUIT_V2_TESTNET]: ChainKey.ZIRCUIT_TESTNET,\n    [EndpointId.CAMP_V2_TESTNET]: ChainKey.CAMP_TESTNET,\n    [EndpointId.OLIVE_V2_TESTNET]: ChainKey.OLIVE_TESTNET,\n    [EndpointId.SANKO_V2_TESTNET]: ChainKey.SANKO_TESTNET,\n    [EndpointId.BOB_V2_TESTNET]: ChainKey.BOB_TESTNET,\n    [EndpointId.CYBER_V2_TESTNET]: ChainKey.CYBER_TESTNET,\n    [EndpointId.BOTANIX_V2_TESTNET]: ChainKey.BOTANIX_TESTNET,\n    [EndpointId.XCHAIN_V2_TESTNET]: ChainKey.XCHAIN_TESTNET,\n    [EndpointId.ZKLINK_V2_TESTNET]: ChainKey.ZKLINK_TESTNET,\n    [EndpointId.EBI_V2_TESTNET]: ChainKey.EBI_TESTNET,\n    [EndpointId.LINEASEP_V2_TESTNET]: ChainKey.LINEASEP_TESTNET,\n    [EndpointId.BESU1_V2_TESTNET]: ChainKey.BESU1_TESTNET,\n    [EndpointId.BOUNCEBIT_V2_TESTNET]: ChainKey.BOUNCEBIT_TESTNET,\n    [EndpointId.MORPH_V2_TESTNET]: ChainKey.MORPH_TESTNET,\n    [EndpointId.SOLANA_V2_TESTNET]: ChainKey.SOLANA_TESTNET,\n\n    // sandbox\n    [EndpointId.ETHEREUM_SANDBOX]: ChainKey.ETHEREUM_SANDBOX,\n    [EndpointId.BSC_SANDBOX]: ChainKey.BSC_SANDBOX,\n    [EndpointId.AVALANCHE_SANDBOX]: ChainKey.AVALANCHE_SANDBOX,\n    [EndpointId.POLYGON_SANDBOX]: ChainKey.POLYGON_SANDBOX,\n    [EndpointId.APTOS_SANDBOX]: ChainKey.APTOS_SANDBOX,\n    [EndpointId.OPTIMISM_SANDBOX]: ChainKey.OPTIMISM_SANDBOX,\n    [EndpointId.TRON_SANDBOX]: ChainKey.TRON_SANDBOX,\n    [EndpointId.TRONDEV_SANDBOX]: ChainKey.TRON_SANDBOX,\n    [EndpointId.ARBITRUM_SANDBOX]: ChainKey.ARBITRUM_SANDBOX,\n    [EndpointId.FANTOM_SANDBOX]: ChainKey.FANTOM_SANDBOX,\n    [EndpointId.METIS_SANDBOX]: ChainKey.METIS_SANDBOX,\n\n    // v2 sandbox\n    [EndpointId.ETHEREUM_V2_SANDBOX]: ChainKey.ETHEREUM_SANDBOX,\n    [EndpointId.POLYGON_V2_SANDBOX]: ChainKey.POLYGON_SANDBOX,\n    [EndpointId.SOLANA_V2_SANDBOX]: ChainKey.SOLANA_SANDBOX,\n    [EndpointId.BSC_V2_SANDBOX]: ChainKey.BSC_SANDBOX,\n    [EndpointId.AVALANCHE_V2_SANDBOX]: ChainKey.AVALANCHE_SANDBOX,\n    [EndpointId.OPTIMISM_V2_SANDBOX]: ChainKey.OPTIMISM_SANDBOX,\n    [EndpointId.METIS_V2_SANDBOX]: ChainKey.METIS_SANDBOX,\n}\n","import { EndpointId, Environment } from '../enums'\n\nexport const ENVIRONMENT: { [endpointId in EndpointId]: Environment } = {\n    [EndpointId.ETHEREUM_MAINNET]: Environment.MAINNET,\n    [EndpointId.BSC_MAINNET]: Environment.MAINNET,\n    [EndpointId.AVALANCHE_MAINNET]: Environment.MAINNET,\n    [EndpointId.POLYGON_MAINNET]: Environment.MAINNET,\n    [EndpointId.ARBITRUM_MAINNET]: Environment.MAINNET,\n    [EndpointId.OPTIMISM_MAINNET]: Environment.MAINNET,\n    [EndpointId.FANTOM_MAINNET]: Environment.MAINNET,\n    [EndpointId.SWIMMER_MAINNET]: Environment.MAINNET,\n    [EndpointId.DFK_MAINNET]: Environment.MAINNET,\n    [EndpointId.HARMONY_MAINNET]: Environment.MAINNET,\n    [EndpointId.DEXALOT_MAINNET]: Environment.MAINNET,\n    [EndpointId.CELO_MAINNET]: Environment.MAINNET,\n    [EndpointId.MOONBEAM_MAINNET]: Environment.MAINNET,\n    [EndpointId.INTAIN_MAINNET]: Environment.MAINNET,\n    [EndpointId.FUSE_MAINNET]: Environment.MAINNET,\n    [EndpointId.GNOSIS_MAINNET]: Environment.MAINNET,\n    [EndpointId.APTOS_MAINNET]: Environment.MAINNET,\n    [EndpointId.KLAYTN_MAINNET]: Environment.MAINNET,\n    [EndpointId.METIS_MAINNET]: Environment.MAINNET,\n    [EndpointId.COREDAO_MAINNET]: Environment.MAINNET,\n    [EndpointId.METER_MAINNET]: Environment.MAINNET,\n    [EndpointId.OKX_MAINNET]: Environment.MAINNET,\n    [EndpointId.GOERLI_MAINNET]: Environment.MAINNET,\n    [EndpointId.ZKSYNC_MAINNET]: Environment.MAINNET,\n    [EndpointId.SHRAPNEL_MAINNET]: Environment.MAINNET,\n    [EndpointId.DOS_MAINNET]: Environment.MAINNET,\n    [EndpointId.ZKPOLYGON_MAINNET]: Environment.MAINNET,\n    [EndpointId.SEPOLIA_MAINNET]: Environment.MAINNET,\n    [EndpointId.MOONRIVER_MAINNET]: Environment.MAINNET,\n    [EndpointId.NOVA_MAINNET]: Environment.MAINNET,\n    [EndpointId.TENET_MAINNET]: Environment.MAINNET,\n    [EndpointId.CANTO_MAINNET]: Environment.MAINNET,\n    [EndpointId.KAVA_MAINNET]: Environment.MAINNET,\n    [EndpointId.MANTLE_MAINNET]: Environment.MAINNET,\n    [EndpointId.HUBBLE_MAINNET]: Environment.MAINNET,\n    [EndpointId.ZKCONSENSYS_MAINNET]: Environment.MAINNET,\n    [EndpointId.BASE_MAINNET]: Environment.MAINNET,\n    [EndpointId.ZORA_MAINNET]: Environment.MAINNET,\n    [EndpointId.TOMO_MAINNET]: Environment.MAINNET,\n    [EndpointId.LOOT_MAINNET]: Environment.MAINNET,\n    [EndpointId.TELOS_MAINNET]: Environment.MAINNET,\n    [EndpointId.MERITCIRCLE_MAINNET]: Environment.MAINNET,\n    [EndpointId.OPBNB_MAINNET]: Environment.MAINNET,\n    [EndpointId.LIF3_MAINNET]: Environment.MAINNET,\n    [EndpointId.ASTAR_MAINNET]: Environment.MAINNET,\n    [EndpointId.AURORA_MAINNET]: Environment.MAINNET,\n    [EndpointId.CONFLUX_MAINNET]: Environment.MAINNET,\n    [EndpointId.ORDERLY_MAINNET]: Environment.MAINNET,\n    [EndpointId.SCROLL_MAINNET]: Environment.MAINNET,\n    [EndpointId.EON_MAINNET]: Environment.MAINNET,\n    [EndpointId.XPLA_MAINNET]: Environment.MAINNET,\n    [EndpointId.MANTA_MAINNET]: Environment.MAINNET,\n    [EndpointId.PGN_MAINNET]: Environment.MAINNET,\n    [EndpointId.SHIMMER_MAINNET]: Environment.MAINNET,\n    [EndpointId.BB1_MAINNET]: Environment.MAINNET,\n    [EndpointId.RARIBLE_MAINNET]: Environment.MAINNET,\n    [EndpointId.XAI_MAINNET]: Environment.MAINNET,\n    [EndpointId.REAL_MAINNET]: Environment.MAINNET,\n    [EndpointId.TILTYARD_MAINNET]: Environment.MAINNET,\n    [EndpointId.FRAXTAL_MAINNET]: Environment.MAINNET,\n    [EndpointId.TRON_MAINNET]: Environment.MAINNET,\n    [EndpointId.ZKATANA_MAINNET]: Environment.MAINNET,\n    [EndpointId.MODE_MAINNET]: Environment.MAINNET,\n    [EndpointId.BLAST_MAINNET]: Environment.MAINNET,\n    [EndpointId.MASA_MAINNET]: Environment.MAINNET,\n    [EndpointId.HOMEVERSE_MAINNET]: Environment.MAINNET,\n    [EndpointId.MERLIN_MAINNET]: Environment.MAINNET,\n    [EndpointId.DEGEN_MAINNET]: Environment.MAINNET,\n    [EndpointId.SKALE_MAINNET]: Environment.MAINNET,\n    [EndpointId.XLAYER_MAINNET]: Environment.MAINNET,\n    [EndpointId.BOB_MAINNET]: Environment.MAINNET,\n    [EndpointId.SANKO_MAINNET]: Environment.MAINNET,\n    [EndpointId.SEI_MAINNET]: Environment.MAINNET,\n    [EndpointId.KINTO_MAINNET]: Environment.MAINNET,\n    [EndpointId.EBI_MAINNET]: Environment.MAINNET,\n    [EndpointId.IOTA_MAINNET]: Environment.MAINNET,\n    [EndpointId.CYBER_MAINNET]: Environment.MAINNET,\n    [EndpointId.JOC_MAINNET]: Environment.MAINNET,\n    [EndpointId.SOLANA_MAINNET]: Environment.MAINNET,\n    [EndpointId.TAIKO_MAINNET]: Environment.MAINNET,\n    [EndpointId.XCHAIN_MAINNET]: Environment.MAINNET,\n    [EndpointId.ETHERLINK_MAINNET]: Environment.MAINNET,\n\n    // v2 mainnet\n    [EndpointId.ETHEREUM_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.BSC_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.AVALANCHE_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.POLYGON_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.ARBITRUM_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.OPTIMISM_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.FANTOM_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.SWIMMER_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.DFK_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.HARMONY_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.DEXALOT_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.CELO_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.MOONBEAM_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.INTAIN_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.FUSE_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.GNOSIS_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.KLAYTN_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.METIS_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.COREDAO_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.GOERLI_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.OKX_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.CANTO_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.ZKSYNC_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.SHRAPNEL_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.DOS_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.ZKPOLYGON_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.SEPOLIA_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.MOONRIVER_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.TENET_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.NOVA_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.METER_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.KAVA_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.MANTLE_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.HUBBLE_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.ZKCONSENSYS_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.BASE_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.ZORA_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.TOMO_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.LOOT_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.TELOS_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.MERITCIRCLE_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.OPBNB_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.LIF3_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.ASTAR_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.AURORA_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.CONFLUX_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.ORDERLY_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.SCROLL_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.EON_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.XPLA_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.MANTA_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.PGN_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.SHIMMER_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.BB1_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.RARIBLE_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.XAI_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.REAL_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.TILTYARD_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.FRAXTAL_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.MODE_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.TRON_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.ZKATANA_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.BLAST_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.MASA_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.HOMEVERSE_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.MERLIN_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.DEGEN_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.SKALE_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.XLAYER_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.BOB_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.SANKO_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.SEI_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.KINTO_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.EBI_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.IOTA_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.CYBER_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.JOC_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.SOLANA_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.TAIKO_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.XCHAIN_V2_MAINNET]: Environment.MAINNET,\n    [EndpointId.ETHERLINK_V2_MAINNET]: Environment.MAINNET,\n\n    // testnet\n    [EndpointId.ETHEREUM_TESTNET]: Environment.TESTNET,\n    [EndpointId.BSC_TESTNET]: Environment.TESTNET,\n    [EndpointId.POLYGON_TESTNET]: Environment.TESTNET,\n    [EndpointId.FANTOM_TESTNET]: Environment.TESTNET,\n    [EndpointId.HARMONY_TESTNET]: Environment.TESTNET,\n    [EndpointId.AVALANCHE_TESTNET]: Environment.TESTNET,\n    [EndpointId.ARBITRUM_TESTNET]: Environment.TESTNET,\n    [EndpointId.OPTIMISM_TESTNET]: Environment.TESTNET,\n    [EndpointId.DFK_TESTNET]: Environment.TESTNET,\n    [EndpointId.SWIMMER_TESTNET]: Environment.TESTNET,\n    [EndpointId.DEXALOT_TESTNET]: Environment.TESTNET,\n    [EndpointId.GNOSIS_TESTNET]: Environment.TESTNET,\n    [EndpointId.CELO_TESTNET]: Environment.TESTNET,\n    [EndpointId.APTOS_TESTNET]: Environment.TESTNET,\n    [EndpointId.MOONBEAM_TESTNET]: Environment.TESTNET,\n    [EndpointId.FUSE_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKSYNC_TESTNET]: Environment.TESTNET,\n    [EndpointId.SHRAPNEL_TESTNET]: Environment.TESTNET,\n    [EndpointId.DOS_TESTNET]: Environment.TESTNET,\n    [EndpointId.KLAYTN_TESTNET]: Environment.TESTNET,\n    [EndpointId.METIS_TESTNET]: Environment.TESTNET,\n    [EndpointId.INTAIN_TESTNET]: Environment.TESTNET,\n    [EndpointId.COREDAO_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKPOLYGON_TESTNET]: Environment.TESTNET,\n    [EndpointId.OKX_TESTNET]: Environment.TESTNET,\n    [EndpointId.SOLANA_TESTNET]: Environment.TESTNET,\n    [EndpointId.METER_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKCONSENSYS_TESTNET]: Environment.TESTNET,\n    [EndpointId.SEPOLIA_TESTNET]: Environment.TESTNET,\n    [EndpointId.BASE_TESTNET]: Environment.TESTNET,\n    [EndpointId.AAVEGOTCHI_TESTNET]: Environment.TESTNET,\n    [EndpointId.SCROLL_TESTNET]: Environment.TESTNET,\n    [EndpointId.CATHAY_TESTNET]: Environment.TESTNET,\n    [EndpointId.KAVA_TESTNET]: Environment.TESTNET,\n    [EndpointId.TENET_TESTNET]: Environment.TESTNET,\n    [EndpointId.CANTO_TESTNET]: Environment.TESTNET,\n    [EndpointId.ORDERLY_TESTNET]: Environment.TESTNET,\n    [EndpointId.BLOCKGEN_TESTNET]: Environment.TESTNET,\n    [EndpointId.MERITCIRCLE_TESTNET]: Environment.TESTNET,\n    [EndpointId.MANTLE_TESTNET]: Environment.TESTNET,\n    [EndpointId.HUBBLE_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZORA_TESTNET]: Environment.TESTNET,\n    [EndpointId.TOMO_TESTNET]: Environment.TESTNET,\n    [EndpointId.LOOT_TESTNET]: Environment.TESTNET,\n    [EndpointId.TELOS_TESTNET]: Environment.TESTNET,\n    [EndpointId.AURORA_TESTNET]: Environment.TESTNET,\n    [EndpointId.OPBNB_TESTNET]: Environment.TESTNET,\n    [EndpointId.SHIMMER_TESTNET]: Environment.TESTNET,\n    [EndpointId.MONAD_TESTNET]: Environment.TESTNET,\n    [EndpointId.LIF3_TESTNET]: Environment.TESTNET,\n    [EndpointId.SPRUCE_TESTNET]: Environment.TESTNET,\n    [EndpointId.PGJJTK_TESTNET]: Environment.TESTNET,\n    [EndpointId.ODA_TESTNET]: Environment.TESTNET,\n    [EndpointId.KIWI_TESTNET]: Environment.TESTNET,\n    [EndpointId.ASTAR_TESTNET]: Environment.TESTNET,\n    [EndpointId.CONFLUX_TESTNET]: Environment.TESTNET,\n    [EndpointId.EON_TESTNET]: Environment.TESTNET,\n    [EndpointId.XPLA_TESTNET]: Environment.TESTNET,\n    [EndpointId.HOLESKY_TESTNET]: Environment.TESTNET,\n    [EndpointId.INJECTIVE_TESTNET]: Environment.TESTNET,\n    [EndpointId.IDEX_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKATANA_TESTNET]: Environment.TESTNET,\n    [EndpointId.MANTA_TESTNET]: Environment.TESTNET,\n    [EndpointId.FRAME_TESTNET]: Environment.TESTNET,\n    [EndpointId.PGN_TESTNET]: Environment.TESTNET,\n    [EndpointId.POLYGONCDK_TESTNET]: Environment.TESTNET,\n    [EndpointId.ARBSEP_TESTNET]: Environment.TESTNET,\n    [EndpointId.OPTSEP_TESTNET]: Environment.TESTNET,\n    [EndpointId.BERA_TESTNET]: Environment.TESTNET,\n    [EndpointId.VENN_TESTNET]: Environment.TESTNET,\n    [EndpointId.RARIBLE_TESTNET]: Environment.TESTNET,\n    [EndpointId.GUNZILLA_TESTNET]: Environment.TESTNET,\n    [EndpointId.RC1_TESTNET]: Environment.TESTNET,\n    [EndpointId.ETHERLINK_TESTNET]: Environment.TESTNET,\n    [EndpointId.KIWI2_TESTNET]: Environment.TESTNET,\n    [EndpointId.JOC_TESTNET]: Environment.TESTNET,\n    [EndpointId.BLAST_TESTNET]: Environment.TESTNET,\n    [EndpointId.TRON_TESTNET]: Environment.TESTNET,\n    [EndpointId.BASESEP_TESTNET]: Environment.TESTNET,\n    [EndpointId.MANTLESEP_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKPOLYGONSEP_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKSYNCSEP_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZORASEP_TESTNET]: Environment.TESTNET,\n    [EndpointId.XAI_TESTNET]: Environment.TESTNET,\n    [EndpointId.TANGIBLE_TESTNET]: Environment.TESTNET,\n    [EndpointId.EXOCORE_TESTNET]: Environment.TESTNET,\n    [EndpointId.FRAXTAL_TESTNET]: Environment.TESTNET,\n    [EndpointId.SEI_TESTNET]: Environment.TESTNET,\n    [EndpointId.MODE_TESTNET]: Environment.TESTNET,\n    [EndpointId.HEDERA_TESTNET]: Environment.TESTNET,\n    [EndpointId.SEI_TESTNET]: Environment.TESTNET,\n    [EndpointId.UNREAL_TESTNET]: Environment.TESTNET,\n    [EndpointId.MASA_TESTNET]: Environment.TESTNET,\n    [EndpointId.MERLIN_TESTNET]: Environment.TESTNET,\n    [EndpointId.HOMEVERSE_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKASTAR_TESTNET]: Environment.TESTNET,\n    [EndpointId.AMOY_TESTNET]: Environment.TESTNET,\n    [EndpointId.DEGEN_TESTNET]: Environment.TESTNET,\n    [EndpointId.XLAYER_TESTNET]: Environment.TESTNET,\n    [EndpointId.FORM_TESTNET]: Environment.TESTNET,\n    [EndpointId.LL1_TESTNET]: Environment.TESTNET,\n    [EndpointId.MANTASEP_TESTNET]: Environment.TESTNET,\n    [EndpointId.SKALE_TESTNET]: Environment.TESTNET,\n    [EndpointId.TAIKO_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZIRCUIT_TESTNET]: Environment.TESTNET,\n    [EndpointId.CAMP_TESTNET]: Environment.TESTNET,\n    [EndpointId.OLIVE_TESTNET]: Environment.TESTNET,\n    [EndpointId.SANKO_TESTNET]: Environment.TESTNET,\n    [EndpointId.BOB_TESTNET]: Environment.TESTNET,\n    [EndpointId.CYBER_TESTNET]: Environment.TESTNET,\n    [EndpointId.BOTANIX_TESTNET]: Environment.TESTNET,\n    [EndpointId.XCHAIN_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKLINK_TESTNET]: Environment.TESTNET,\n    [EndpointId.EBI_TESTNET]: Environment.TESTNET,\n    [EndpointId.LINEASEP_TESTNET]: Environment.TESTNET,\n    [EndpointId.BESU1_TESTNET]: Environment.TESTNET,\n    [EndpointId.BOUNCEBIT_TESTNET]: Environment.TESTNET,\n    [EndpointId.MORPH_TESTNET]: Environment.TESTNET,\n\n    // v2 testnet\n    [EndpointId.ETHEREUM_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.POLYGON_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ARBITRUM_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.OPTIMISM_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.AVALANCHE_V2_TESTNET]: Environment.TESTNET,\n\n    [EndpointId.BSC_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.FANTOM_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.DFK_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.HARMONY_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.DEXALOT_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.CELO_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.MOONBEAM_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.FUSE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.GNOSIS_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKSYNC_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.SHRAPNEL_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.DOS_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.KLAYTN_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.METIS_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.COREDAO_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.OKX_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.METER_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKCONSENSYS_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKPOLYGON_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.CANTO_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.BASE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.SEPOLIA_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.AAVEGOTCHI_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.SCROLL_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.CATHAY_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.KAVA_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.TENET_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ORDERLY_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.BLOCKGEN_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.MERITCIRCLE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.MANTLE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.HUBBLE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZORA_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.TOMO_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.LOOT_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.TELOS_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.AURORA_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.OPBNB_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.SHIMMER_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.MONAD_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.LIF3_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.SPRUCE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.PGJJTK_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ODA_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.KIWI_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ASTAR_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.CONFLUX_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.EON_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.XPLA_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.HOLESKY_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.INJECTIVE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.IDEX_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKATANA_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.MANTA_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.FRAME_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.PGN_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.POLYGONCDK_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ARBSEP_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.OPTSEP_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.BERA_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.VENN_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.RARIBLE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.GUNZILLA_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.RC1_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ETHERLINK_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.KIWI2_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.JOC_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.BLAST_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.BASESEP_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.MANTLESEP_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKPOLYGONSEP_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKSYNCSEP_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZORASEP_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.XAI_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.TANGIBLE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.TRON_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.EXOCORE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.FRAXTAL_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.SEI_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.MODE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.HEDERA_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.SEI_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.UNREAL_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.MASA_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.MERLIN_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.HOMEVERSE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKASTAR_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.AMOY_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.DEGEN_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.XLAYER_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.FORM_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.LL1_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.MANTASEP_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.SKALE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.TAIKO_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZIRCUIT_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.CAMP_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.OLIVE_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.SANKO_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.BOB_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.CYBER_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.BOTANIX_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.XCHAIN_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.ZKLINK_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.EBI_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.LINEASEP_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.BESU1_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.BOUNCEBIT_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.MORPH_V2_TESTNET]: Environment.TESTNET,\n    [EndpointId.SOLANA_V2_TESTNET]: Environment.TESTNET,\n\n    // sandbox\n    [EndpointId.ETHEREUM_SANDBOX]: Environment.TESTNET,\n    [EndpointId.BSC_SANDBOX]: Environment.TESTNET,\n    [EndpointId.POLYGON_SANDBOX]: Environment.TESTNET,\n    [EndpointId.AVALANCHE_SANDBOX]: Environment.TESTNET,\n    [EndpointId.APTOS_SANDBOX]: Environment.DEVNET,\n    [EndpointId.OPTIMISM_SANDBOX]: Environment.TESTNET,\n    [EndpointId.TRON_SANDBOX]: Environment.TESTNET,\n    [EndpointId.TRONDEV_SANDBOX]: Environment.TESTNET,\n    [EndpointId.ARBITRUM_SANDBOX]: Environment.TESTNET,\n    [EndpointId.FANTOM_SANDBOX]: Environment.TESTNET,\n    [EndpointId.METIS_SANDBOX]: Environment.TESTNET,\n\n    // v2 sandbox\n    [EndpointId.ETHEREUM_V2_SANDBOX]: Environment.TESTNET,\n    [EndpointId.POLYGON_V2_SANDBOX]: Environment.DEVNET,\n    [EndpointId.SOLANA_V2_SANDBOX]: Environment.DEVNET,\n    [EndpointId.BSC_V2_SANDBOX]: Environment.DEVNET,\n    [EndpointId.AVALANCHE_V2_SANDBOX]: Environment.DEVNET,\n    [EndpointId.OPTIMISM_V2_SANDBOX]: Environment.TESTNET,\n    [EndpointId.METIS_V2_SANDBOX]: Environment.TESTNET,\n}\n","import { EndpointId } from '../enums'\n\nexport const ULN_V1_CHAINS = [\n    EndpointId.ETHEREUM_MAINNET,\n    EndpointId.ETHEREUM_TESTNET,\n    EndpointId.ETHEREUM_SANDBOX,\n    EndpointId.BSC_MAINNET,\n    EndpointId.BSC_TESTNET,\n    EndpointId.BSC_SANDBOX,\n    EndpointId.AVALANCHE_MAINNET,\n    EndpointId.AVALANCHE_TESTNET,\n    EndpointId.AVALANCHE_SANDBOX,\n    EndpointId.POLYGON_MAINNET,\n    EndpointId.POLYGON_TESTNET,\n    EndpointId.POLYGON_SANDBOX,\n    EndpointId.ARBITRUM_MAINNET,\n    EndpointId.OPTIMISM_MAINNET,\n    EndpointId.FANTOM_MAINNET,\n    EndpointId.FANTOM_TESTNET,\n    EndpointId.SWIMMER_MAINNET,\n    EndpointId.SWIMMER_TESTNET,\n    EndpointId.DFK_MAINNET,\n    EndpointId.DFK_TESTNET,\n    EndpointId.HARMONY_MAINNET,\n    EndpointId.HARMONY_TESTNET,\n    EndpointId.MOONBEAM_MAINNET,\n    EndpointId.MOONBEAM_TESTNET,\n    EndpointId.DEXALOT_TESTNET,\n    EndpointId.CELO_TESTNET,\n    EndpointId.INTAIN_TESTNET,\n]\n","import invariant from 'tiny-invariant'\n\nimport { CHAIN_KEY, ENVIRONMENT, ULN_V1_CHAINS } from '../constants'\nimport { Chain, ChainKey, ChainType, EndpointId, EndpointVersion, Environment, EvmChain, Stage } from '../enums'\nimport { EndpointDomain, Network } from '../types'\n\nexport function networkToEndpointId(network: string, version: EndpointVersion): number {\n    const name = network.replace('-local', '')\n    const [chain, stage] = name.split('-')\n\n    const key =\n        version === EndpointVersion.V1\n            ? `${chain.toUpperCase()}_${stage.toUpperCase()}`\n            : `${chain.toUpperCase()}_V2_${stage.toUpperCase()}`\n    invariant(key in EndpointId, `Invalid network name: ${network}, key: ${key}`)\n    return EndpointId[key as keyof typeof EndpointId] as EndpointId\n}\n\nexport function networkToEnv(network: string, version: EndpointVersion): Environment {\n    if (network.includes('local') || network === 'hardhat') {\n        return Environment.LOCAL\n    }\n    const endpointId = networkToEndpointId(network, version)\n    return ENVIRONMENT[endpointId as keyof typeof ENVIRONMENT]\n}\n\nexport function networkToStage(network: string): Stage {\n    const name = network.replace('-local', '')\n    const sp = name.split('-')\n    if (sp.length <= 1) {\n        throw new Error(`Invalid network name: ${network}`)\n    }\n    const stage = sp[1].toUpperCase()\n    return Stage[stage as keyof typeof Stage]\n}\n\nexport function endpointIdToNetwork(endpointId: number, envOrIsLocal?: Environment | boolean): Network {\n    const key = EndpointId[endpointId]\n    invariant(key, `Invalid endpointId: ${endpointId}`)\n    const network = key.toLowerCase().replace(/_/g, '-').replace('-v2', '')\n    if (envOrIsLocal === Environment.LOCAL || envOrIsLocal === true) {\n        return `${network}-local` as Network\n    }\n    return network as Network\n}\n\nexport function endpointIdToVersion(endpointId: number): EndpointVersion {\n    const key = EndpointId[endpointId]\n    invariant(key, `Invalid endpointId: ${endpointId}`)\n    return key.includes('V2') ? EndpointVersion.V2 : EndpointVersion.V1\n}\n\nexport function endpointIdToChainKey(endpointId: number): ChainKey {\n    const chainKey = CHAIN_KEY[endpointId as EndpointId]\n    invariant(chainKey, `No ChainKey for EndpointId: ${endpointId}`)\n    return chainKey\n}\n\nexport function chainAndStageToEndpointId(chain: Chain, stage: Stage, version: EndpointVersion): EndpointId {\n    const key =\n        version === EndpointVersion.V2\n            ? `${chain.toUpperCase()}_V2_${stage.toUpperCase()}`\n            : `${chain.toUpperCase()}_${stage.toUpperCase()}`\n    invariant(key in EndpointId, `Invalid key: ${key}`)\n    return EndpointId[key as keyof typeof EndpointId] as EndpointId\n}\n\nexport function chainAndStageToNetwork(chain: Chain, stage: Stage, envOrIsLocal?: Environment | boolean): Network {\n    if (envOrIsLocal === Environment.LOCAL || envOrIsLocal === true) {\n        return `${chain}-${stage}-local`\n    }\n    return `${chain}-${stage}`\n}\n\nexport function endpointDomainToNetwork(domain: EndpointDomain): Network {\n    return chainAndStageToNetwork(domain.chain, domain.stage, domain.isLocal ? Environment.LOCAL : undefined)\n}\n\nexport function endpointDomainToEnv(domain: EndpointDomain): Environment {\n    return domain.isLocal ? Environment.LOCAL : networkToEnv(endpointDomainToNetwork(domain), domain.version)\n}\n\nexport function endpointDomainToEndpointId(domain: EndpointDomain): EndpointId {\n    return chainAndStageToEndpointId(domain.chain, domain.stage, domain.version)\n}\n\nexport function endpointIdToEndpointDomain(endpointId: EndpointId, isLocal = false): EndpointDomain {\n    const chain = endpointIdToChain(endpointId)\n    const stage = endpointIdToStage(endpointId)\n    const version = endpointIdToVersion(endpointId)\n    return { chain, stage, version, isLocal }\n}\n\nexport function networkToEndpointDomain(network: Network, version: EndpointVersion): EndpointDomain {\n    const chain = networkToChain(network)\n    const stage = networkToStage(network)\n    const isLocal = network.endsWith('-local')\n    return { chain, stage, version, isLocal }\n}\n\nexport function networkToChain(network: string): Chain {\n    return network.split('-')[0] as Chain\n}\n\nexport function networkToChainType(network: string): ChainType {\n    const chain = networkToChain(network)\n    return getChainType(chain)\n}\n\n/**\n * Returns the chain family for a given chain\n * @param chain\n */\nexport function getChainType(chain: Chain): ChainType {\n    switch (chain) {\n        case Chain.APTOS:\n            return ChainType.APTOS\n        case Chain.SOLANA:\n            return ChainType.SOLANA\n        default:\n            if (Object.values(EvmChain).includes(chain)) {\n                return ChainType.EVM\n            } else {\n                return ChainType.UNKNOWN\n            }\n    }\n}\n\nexport function endpointIdToChain(endpointId: number): Chain {\n    const key = EndpointId[endpointId]\n    invariant(key, `Invalid endpointId: ${endpointId}`)\n    return key.split('_')[0].toLowerCase() as Chain\n}\n\nexport function endpointIdToStage(endpointId: number): Stage {\n    if (endpointId < 10000) {\n        return Stage.MAINNET\n    } else if (endpointId < 20000) {\n        return Stage.TESTNET\n    } else if (endpointId < 30000) {\n        return Stage.SANDBOX\n    } else if (endpointId < 40000) {\n        return Stage.MAINNET\n    } else if (endpointId < 50000) {\n        return Stage.TESTNET\n    } else if (endpointId < 60000) {\n        return Stage.SANDBOX\n    }\n    throw new Error(`Invalid endpointId: ${endpointId}`)\n}\n\nexport function endpointIdToChainType(endpointId: number): ChainType {\n    const chain = endpointIdToChain(endpointId)\n    return getChainType(chain)\n}\n\nexport function getNetworksForStage(stage: Stage): string[] {\n    const networks: string[] = []\n    for (const key in EndpointId) {\n        if (Number(key) >= 0) {\n            const network = endpointIdToNetwork(Number(key))\n            const s = network.split('-')[1] as Stage\n            if (stage === s) {\n                networks.push(network)\n            }\n        }\n    }\n    return networks\n}\n\nconst ULN_V1_BIAS = 100\n\nexport const getEndpointVersionForUlnVersion = (ulnVersion: string): EndpointVersion => {\n    const [, , /*majorVerion*/ /*minorVersion*/ endpointVersion] = ulnVersion.split('.')\n    if (typeof endpointVersion === 'undefined') {\n        return EndpointVersion.V1\n    }\n    const version = {\n        '1': EndpointVersion.V1,\n        '2': EndpointVersion.V2,\n    }[endpointVersion]\n    if (version == null) {\n        throw new Error(`Invalid ulnVersion: ${ulnVersion}`)\n    }\n    return version\n}\n\nexport function getChainIdForNetwork(chain: string, stage: string, ulnVersion: string): string {\n    const endpointId = chainAndStageToEndpointId(\n        chain as Chain,\n        stage as Stage,\n        getEndpointVersionForUlnVersion(ulnVersion)\n    )\n    return (ulnVersion == '1' ? endpointId - ULN_V1_BIAS : endpointId).toString()\n}\n\nexport function getNetworkForChainId(targetChainId: number): { chainName: Chain; env: Stage; ulnVersion: string } {\n    if (ULN_V1_CHAINS.includes(targetChainId + ULN_V1_BIAS)) {\n        const endpointId = targetChainId + ULN_V1_BIAS\n        const chain = endpointIdToChain(endpointId)\n        const stage = networkToStage(endpointIdToNetwork(endpointId))\n        return {\n            chainName: chain,\n            env: stage,\n            ulnVersion: '1',\n        }\n    }\n    const chain = endpointIdToChain(targetChainId)\n    const stage = networkToStage(endpointIdToNetwork(targetChainId))\n    return {\n        chainName: chain,\n        env: stage,\n        ulnVersion: '2',\n    }\n}\nexport function isNetworkEndpointIdSupported(network: string, endpointVersion: EndpointVersion): boolean {\n    try {\n        networkToEndpointId(network, endpointVersion)\n        return true\n    } catch (e) {\n        return false\n    }\n}\n\n/**\n * Determine if a chain is zkSync based.\n * @param {Chain} chain\n */\nexport function isZKSyncBasedChain(chain: Chain): boolean {\n    return chain === Chain.ZKSYNC || chain === Chain.ZKSYNCSEP\n}\n\n/**\n * Determine if a chain is tron.\n * @param {Chain} chain\n */\nexport function isTronChain(chain: Chain): boolean {\n    return chain === Chain.TRON || chain === Chain.TRONDEV\n}\n\nexport function isEvmChain(chain: Chain): boolean {\n    return getChainType(chain) === ChainType.EVM\n}\n\nexport function isAptosChain(chain: Chain): boolean {\n    return getChainType(chain) === ChainType.APTOS\n}\n\nexport function isSolanaChain(chain: Chain): boolean {\n    return getChainType(chain) === ChainType.SOLANA\n}\n"]}