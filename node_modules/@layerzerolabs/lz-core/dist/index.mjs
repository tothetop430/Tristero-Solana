// src/transaction.ts
var Block = class _Block {
  constructor(block) {
    this.block = block;
    this.type = "Block";
  }
  static from(raw) {
    return new _Block(raw);
  }
};
var BlockWithTransactions = class _BlockWithTransactions {
  constructor(block) {
    this.block = block;
    this.type = "BlockWithTransactions";
  }
  static from(raw) {
    return new _BlockWithTransactions(raw);
  }
};
var TransactionRequest = class _TransactionRequest {
  constructor(request) {
    this.request = request;
    this.type = "TransactionRequest";
  }
  static from(raw) {
    return new _TransactionRequest(raw);
  }
};
var TransactionResponse = class _TransactionResponse {
  constructor(response) {
    this.response = response;
    this.type = "TransactionResponse";
  }
  static from(raw) {
    return new _TransactionResponse(raw);
  }
};
var TransactionReceipt = class _TransactionReceipt {
  constructor(receipt) {
    this.receipt = receipt;
    this.type = "TransactionReceipt";
  }
  static from(raw) {
    return new _TransactionReceipt(raw);
  }
};
var SignedTransaction = class _SignedTransaction {
  constructor(signed) {
    this.signed = signed;
    this.type = "SignedTransaction";
  }
  static from(raw) {
    return new _SignedTransaction(raw);
  }
};
var TransactionPending = class _TransactionPending {
  constructor(pending) {
    this.pending = pending;
    this.type = "TransactionPending";
  }
  static from(raw) {
    return new _TransactionPending(raw);
  }
};

// src/signer.ts
function isConnectable(obj) {
  if (typeof obj !== "object" || obj === null)
    return false;
  const fn = obj.connect;
  return typeof fn === "function" && typeof fn.length === "number" && fn.length === 1;
}

export { Block, BlockWithTransactions, SignedTransaction, TransactionPending, TransactionReceipt, TransactionRequest, TransactionResponse, isConnectable };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.mjs.map